/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type VerifyUserDto = {
    idUser: string;
    email: string;
    firstName: string;
    lastName: string;
};

/** @internal */
export const VerifyUserDto$inboundSchema: z.ZodType<VerifyUserDto, z.ZodTypeDef, unknown> = z
    .object({
        id_user: z.string(),
        email: z.string(),
        first_name: z.string(),
        last_name: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            id_user: "idUser",
            first_name: "firstName",
            last_name: "lastName",
        });
    });

/** @internal */
export type VerifyUserDto$Outbound = {
    id_user: string;
    email: string;
    first_name: string;
    last_name: string;
};

/** @internal */
export const VerifyUserDto$outboundSchema: z.ZodType<
    VerifyUserDto$Outbound,
    z.ZodTypeDef,
    VerifyUserDto
> = z
    .object({
        idUser: z.string(),
        email: z.string(),
        firstName: z.string(),
        lastName: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            idUser: "id_user",
            firstName: "first_name",
            lastName: "last_name",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VerifyUserDto$ {
    /** @deprecated use `VerifyUserDto$inboundSchema` instead. */
    export const inboundSchema = VerifyUserDto$inboundSchema;
    /** @deprecated use `VerifyUserDto$outboundSchema` instead. */
    export const outboundSchema = VerifyUserDto$outboundSchema;
    /** @deprecated use `VerifyUserDto$Outbound` instead. */
    export type Outbound = VerifyUserDto$Outbound;
}
