/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type CreateUserDto = {
    firstName: string;
    lastName: string;
    email: string;
    strategy: string;
    passwordHash?: string | undefined;
    idOrganisation?: string | undefined;
};

/** @internal */
export const CreateUserDto$inboundSchema: z.ZodType<CreateUserDto, z.ZodTypeDef, unknown> = z
    .object({
        first_name: z.string(),
        last_name: z.string(),
        email: z.string(),
        strategy: z.string(),
        password_hash: z.string().optional(),
        id_organisation: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            first_name: "firstName",
            last_name: "lastName",
            password_hash: "passwordHash",
            id_organisation: "idOrganisation",
        });
    });

/** @internal */
export type CreateUserDto$Outbound = {
    first_name: string;
    last_name: string;
    email: string;
    strategy: string;
    password_hash?: string | undefined;
    id_organisation?: string | undefined;
};

/** @internal */
export const CreateUserDto$outboundSchema: z.ZodType<
    CreateUserDto$Outbound,
    z.ZodTypeDef,
    CreateUserDto
> = z
    .object({
        firstName: z.string(),
        lastName: z.string(),
        email: z.string(),
        strategy: z.string(),
        passwordHash: z.string().optional(),
        idOrganisation: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            firstName: "first_name",
            lastName: "last_name",
            passwordHash: "password_hash",
            idOrganisation: "id_organisation",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateUserDto$ {
    /** @deprecated use `CreateUserDto$inboundSchema` instead. */
    export const inboundSchema = CreateUserDto$inboundSchema;
    /** @deprecated use `CreateUserDto$outboundSchema` instead. */
    export const outboundSchema = CreateUserDto$outboundSchema;
    /** @deprecated use `CreateUserDto$Outbound` instead. */
    export type Outbound = CreateUserDto$Outbound;
}
