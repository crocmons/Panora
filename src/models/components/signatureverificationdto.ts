/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SignatureVerificationDto = {
    signature: string;
    secret: string;
};

/** @internal */
export const SignatureVerificationDto$inboundSchema: z.ZodType<
    SignatureVerificationDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    signature: z.string(),
    secret: z.string(),
});

/** @internal */
export type SignatureVerificationDto$Outbound = {
    signature: string;
    secret: string;
};

/** @internal */
export const SignatureVerificationDto$outboundSchema: z.ZodType<
    SignatureVerificationDto$Outbound,
    z.ZodTypeDef,
    SignatureVerificationDto
> = z.object({
    signature: z.string(),
    secret: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SignatureVerificationDto$ {
    /** @deprecated use `SignatureVerificationDto$inboundSchema` instead. */
    export const inboundSchema = SignatureVerificationDto$inboundSchema;
    /** @deprecated use `SignatureVerificationDto$outboundSchema` instead. */
    export const outboundSchema = SignatureVerificationDto$outboundSchema;
    /** @deprecated use `SignatureVerificationDto$Outbound` instead. */
    export type Outbound = SignatureVerificationDto$Outbound;
}
