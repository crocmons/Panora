/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UnifiedAttachmentInputFieldMappings = {};

export type UnifiedAttachmentInput = {
    /**
     * The file name of the attachment
     */
    fileName: string;
    /**
     * The file url of the attachment
     */
    fileUrl: string;
    /**
     * The uploader's uuid of the attachment
     */
    uploader: string;
    fieldMappings: UnifiedAttachmentInputFieldMappings;
};

/** @internal */
export const UnifiedAttachmentInputFieldMappings$inboundSchema: z.ZodType<
    UnifiedAttachmentInputFieldMappings,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedAttachmentInputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedAttachmentInputFieldMappings$outboundSchema: z.ZodType<
    UnifiedAttachmentInputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedAttachmentInputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedAttachmentInputFieldMappings$ {
    /** @deprecated use `UnifiedAttachmentInputFieldMappings$inboundSchema` instead. */
    export const inboundSchema = UnifiedAttachmentInputFieldMappings$inboundSchema;
    /** @deprecated use `UnifiedAttachmentInputFieldMappings$outboundSchema` instead. */
    export const outboundSchema = UnifiedAttachmentInputFieldMappings$outboundSchema;
    /** @deprecated use `UnifiedAttachmentInputFieldMappings$Outbound` instead. */
    export type Outbound = UnifiedAttachmentInputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedAttachmentInput$inboundSchema: z.ZodType<
    UnifiedAttachmentInput,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        file_name: z.string(),
        file_url: z.string(),
        uploader: z.string(),
        field_mappings: z.lazy(() => UnifiedAttachmentInputFieldMappings$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            file_name: "fileName",
            file_url: "fileUrl",
            field_mappings: "fieldMappings",
        });
    });

/** @internal */
export type UnifiedAttachmentInput$Outbound = {
    file_name: string;
    file_url: string;
    uploader: string;
    field_mappings: UnifiedAttachmentInputFieldMappings$Outbound;
};

/** @internal */
export const UnifiedAttachmentInput$outboundSchema: z.ZodType<
    UnifiedAttachmentInput$Outbound,
    z.ZodTypeDef,
    UnifiedAttachmentInput
> = z
    .object({
        fileName: z.string(),
        fileUrl: z.string(),
        uploader: z.string(),
        fieldMappings: z.lazy(() => UnifiedAttachmentInputFieldMappings$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            fileName: "file_name",
            fileUrl: "file_url",
            fieldMappings: "field_mappings",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedAttachmentInput$ {
    /** @deprecated use `UnifiedAttachmentInput$inboundSchema` instead. */
    export const inboundSchema = UnifiedAttachmentInput$inboundSchema;
    /** @deprecated use `UnifiedAttachmentInput$outboundSchema` instead. */
    export const outboundSchema = UnifiedAttachmentInput$outboundSchema;
    /** @deprecated use `UnifiedAttachmentInput$Outbound` instead. */
    export type Outbound = UnifiedAttachmentInput$Outbound;
}
