/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type UnifiedDriveInput = {};

/** @internal */
export const UnifiedDriveInput$inboundSchema: z.ZodType<UnifiedDriveInput, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type UnifiedDriveInput$Outbound = {};

/** @internal */
export const UnifiedDriveInput$outboundSchema: z.ZodType<
    UnifiedDriveInput$Outbound,
    z.ZodTypeDef,
    UnifiedDriveInput
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedDriveInput$ {
    /** @deprecated use `UnifiedDriveInput$inboundSchema` instead. */
    export const inboundSchema = UnifiedDriveInput$inboundSchema;
    /** @deprecated use `UnifiedDriveInput$outboundSchema` instead. */
    export const outboundSchema = UnifiedDriveInput$outboundSchema;
    /** @deprecated use `UnifiedDriveInput$Outbound` instead. */
    export type Outbound = UnifiedDriveInput$Outbound;
}
