/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type ToggleStrategyDto = {
    idCs: string;
};

/** @internal */
export const ToggleStrategyDto$inboundSchema: z.ZodType<ToggleStrategyDto, z.ZodTypeDef, unknown> =
    z
        .object({
            id_cs: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                id_cs: "idCs",
            });
        });

/** @internal */
export type ToggleStrategyDto$Outbound = {
    id_cs: string;
};

/** @internal */
export const ToggleStrategyDto$outboundSchema: z.ZodType<
    ToggleStrategyDto$Outbound,
    z.ZodTypeDef,
    ToggleStrategyDto
> = z
    .object({
        idCs: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            idCs: "id_cs",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToggleStrategyDto$ {
    /** @deprecated use `ToggleStrategyDto$inboundSchema` instead. */
    export const inboundSchema = ToggleStrategyDto$inboundSchema;
    /** @deprecated use `ToggleStrategyDto$outboundSchema` instead. */
    export const outboundSchema = ToggleStrategyDto$outboundSchema;
    /** @deprecated use `ToggleStrategyDto$Outbound` instead. */
    export type Outbound = ToggleStrategyDto$Outbound;
}
