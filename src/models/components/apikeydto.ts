/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ApiKeyDto = {
    projectId: string;
    userId: string;
    keyName: string;
};

/** @internal */
export const ApiKeyDto$inboundSchema: z.ZodType<ApiKeyDto, z.ZodTypeDef, unknown> = z.object({
    projectId: z.string(),
    userId: z.string(),
    keyName: z.string(),
});

/** @internal */
export type ApiKeyDto$Outbound = {
    projectId: string;
    userId: string;
    keyName: string;
};

/** @internal */
export const ApiKeyDto$outboundSchema: z.ZodType<ApiKeyDto$Outbound, z.ZodTypeDef, ApiKeyDto> =
    z.object({
        projectId: z.string(),
        userId: z.string(),
        keyName: z.string(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiKeyDto$ {
    /** @deprecated use `ApiKeyDto$inboundSchema` instead. */
    export const inboundSchema = ApiKeyDto$inboundSchema;
    /** @deprecated use `ApiKeyDto$outboundSchema` instead. */
    export const outboundSchema = ApiKeyDto$outboundSchema;
    /** @deprecated use `ApiKeyDto$Outbound` instead. */
    export type Outbound = ApiKeyDto$Outbound;
}
