/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UpdateCSDto = {
    idCs: string;
    status: boolean;
    attributes: Array<string>;
    values: Array<string>;
};

/** @internal */
export const UpdateCSDto$inboundSchema: z.ZodType<UpdateCSDto, z.ZodTypeDef, unknown> = z
    .object({
        id_cs: z.string(),
        status: z.boolean(),
        attributes: z.array(z.string()),
        values: z.array(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            id_cs: "idCs",
        });
    });

/** @internal */
export type UpdateCSDto$Outbound = {
    id_cs: string;
    status: boolean;
    attributes: Array<string>;
    values: Array<string>;
};

/** @internal */
export const UpdateCSDto$outboundSchema: z.ZodType<
    UpdateCSDto$Outbound,
    z.ZodTypeDef,
    UpdateCSDto
> = z
    .object({
        idCs: z.string(),
        status: z.boolean(),
        attributes: z.array(z.string()),
        values: z.array(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            idCs: "id_cs",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCSDto$ {
    /** @deprecated use `UpdateCSDto$inboundSchema` instead. */
    export const inboundSchema = UpdateCSDto$inboundSchema;
    /** @deprecated use `UpdateCSDto$outboundSchema` instead. */
    export const outboundSchema = UpdateCSDto$outboundSchema;
    /** @deprecated use `UpdateCSDto$Outbound` instead. */
    export type Outbound = UpdateCSDto$Outbound;
}
