/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type CreateOrganizationDto = {
    name: string;
    stripeCustomerId: string;
};

/** @internal */
export const CreateOrganizationDto$inboundSchema: z.ZodType<
    CreateOrganizationDto,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        name: z.string(),
        stripe_customer_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            stripe_customer_id: "stripeCustomerId",
        });
    });

/** @internal */
export type CreateOrganizationDto$Outbound = {
    name: string;
    stripe_customer_id: string;
};

/** @internal */
export const CreateOrganizationDto$outboundSchema: z.ZodType<
    CreateOrganizationDto$Outbound,
    z.ZodTypeDef,
    CreateOrganizationDto
> = z
    .object({
        name: z.string(),
        stripeCustomerId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            stripeCustomerId: "stripe_customer_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrganizationDto$ {
    /** @deprecated use `CreateOrganizationDto$inboundSchema` instead. */
    export const inboundSchema = CreateOrganizationDto$inboundSchema;
    /** @deprecated use `CreateOrganizationDto$outboundSchema` instead. */
    export const outboundSchema = CreateOrganizationDto$outboundSchema;
    /** @deprecated use `CreateOrganizationDto$Outbound` instead. */
    export type Outbound = CreateOrganizationDto$Outbound;
}
