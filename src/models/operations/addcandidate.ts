/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddCandidateRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedCandidateInput: components.UnifiedCandidateInput;
};

export type AddCandidateResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedCandidateOutput | undefined;
};

export type AddCandidateResponse = components.UnifiedCandidateOutput | AddCandidateResponseBody;

/** @internal */
export const AddCandidateRequest$inboundSchema: z.ZodType<
    AddCandidateRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedCandidateInput: components.UnifiedCandidateInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedCandidateInput: "unifiedCandidateInput",
        });
    });

/** @internal */
export type AddCandidateRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedCandidateInput: components.UnifiedCandidateInput$Outbound;
};

/** @internal */
export const AddCandidateRequest$outboundSchema: z.ZodType<
    AddCandidateRequest$Outbound,
    z.ZodTypeDef,
    AddCandidateRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedCandidateInput: components.UnifiedCandidateInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedCandidateInput: "UnifiedCandidateInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddCandidateRequest$ {
    /** @deprecated use `AddCandidateRequest$inboundSchema` instead. */
    export const inboundSchema = AddCandidateRequest$inboundSchema;
    /** @deprecated use `AddCandidateRequest$outboundSchema` instead. */
    export const outboundSchema = AddCandidateRequest$outboundSchema;
    /** @deprecated use `AddCandidateRequest$Outbound` instead. */
    export type Outbound = AddCandidateRequest$Outbound;
}

/** @internal */
export const AddCandidateResponseBody$inboundSchema: z.ZodType<
    AddCandidateResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedCandidateOutput$inboundSchema.optional(),
});

/** @internal */
export type AddCandidateResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedCandidateOutput$Outbound | undefined;
};

/** @internal */
export const AddCandidateResponseBody$outboundSchema: z.ZodType<
    AddCandidateResponseBody$Outbound,
    z.ZodTypeDef,
    AddCandidateResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedCandidateOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddCandidateResponseBody$ {
    /** @deprecated use `AddCandidateResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddCandidateResponseBody$inboundSchema;
    /** @deprecated use `AddCandidateResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddCandidateResponseBody$outboundSchema;
    /** @deprecated use `AddCandidateResponseBody$Outbound` instead. */
    export type Outbound = AddCandidateResponseBody$Outbound;
}

/** @internal */
export const AddCandidateResponse$inboundSchema: z.ZodType<
    AddCandidateResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedCandidateOutput$inboundSchema,
    z.lazy(() => AddCandidateResponseBody$inboundSchema),
]);

/** @internal */
export type AddCandidateResponse$Outbound =
    | components.UnifiedCandidateOutput$Outbound
    | AddCandidateResponseBody$Outbound;

/** @internal */
export const AddCandidateResponse$outboundSchema: z.ZodType<
    AddCandidateResponse$Outbound,
    z.ZodTypeDef,
    AddCandidateResponse
> = z.union([
    components.UnifiedCandidateOutput$outboundSchema,
    z.lazy(() => AddCandidateResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddCandidateResponse$ {
    /** @deprecated use `AddCandidateResponse$inboundSchema` instead. */
    export const inboundSchema = AddCandidateResponse$inboundSchema;
    /** @deprecated use `AddCandidateResponse$outboundSchema` instead. */
    export const outboundSchema = AddCandidateResponse$outboundSchema;
    /** @deprecated use `AddCandidateResponse$Outbound` instead. */
    export type Outbound = AddCandidateResponse$Outbound;
}
