/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddDependentRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
    unifiedDependentInput: components.UnifiedDependentInput;
};

export type AddDependentResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedDependentOutput | undefined;
};

export type AddDependentResponse = components.UnifiedDependentOutput | AddDependentResponseBody;

/** @internal */
export const AddDependentRequest$inboundSchema: z.ZodType<
    AddDependentRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedDependentInput: components.UnifiedDependentInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedDependentInput: "unifiedDependentInput",
        });
    });

/** @internal */
export type AddDependentRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedDependentInput: components.UnifiedDependentInput$Outbound;
};

/** @internal */
export const AddDependentRequest$outboundSchema: z.ZodType<
    AddDependentRequest$Outbound,
    z.ZodTypeDef,
    AddDependentRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedDependentInput: components.UnifiedDependentInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedDependentInput: "UnifiedDependentInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddDependentRequest$ {
    /** @deprecated use `AddDependentRequest$inboundSchema` instead. */
    export const inboundSchema = AddDependentRequest$inboundSchema;
    /** @deprecated use `AddDependentRequest$outboundSchema` instead. */
    export const outboundSchema = AddDependentRequest$outboundSchema;
    /** @deprecated use `AddDependentRequest$Outbound` instead. */
    export type Outbound = AddDependentRequest$Outbound;
}

/** @internal */
export const AddDependentResponseBody$inboundSchema: z.ZodType<
    AddDependentResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedDependentOutput$inboundSchema.optional(),
});

/** @internal */
export type AddDependentResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedDependentOutput$Outbound | undefined;
};

/** @internal */
export const AddDependentResponseBody$outboundSchema: z.ZodType<
    AddDependentResponseBody$Outbound,
    z.ZodTypeDef,
    AddDependentResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedDependentOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddDependentResponseBody$ {
    /** @deprecated use `AddDependentResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddDependentResponseBody$inboundSchema;
    /** @deprecated use `AddDependentResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddDependentResponseBody$outboundSchema;
    /** @deprecated use `AddDependentResponseBody$Outbound` instead. */
    export type Outbound = AddDependentResponseBody$Outbound;
}

/** @internal */
export const AddDependentResponse$inboundSchema: z.ZodType<
    AddDependentResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedDependentOutput$inboundSchema,
    z.lazy(() => AddDependentResponseBody$inboundSchema),
]);

/** @internal */
export type AddDependentResponse$Outbound =
    | components.UnifiedDependentOutput$Outbound
    | AddDependentResponseBody$Outbound;

/** @internal */
export const AddDependentResponse$outboundSchema: z.ZodType<
    AddDependentResponse$Outbound,
    z.ZodTypeDef,
    AddDependentResponse
> = z.union([
    components.UnifiedDependentOutput$outboundSchema,
    z.lazy(() => AddDependentResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddDependentResponse$ {
    /** @deprecated use `AddDependentResponse$inboundSchema` instead. */
    export const inboundSchema = AddDependentResponse$inboundSchema;
    /** @deprecated use `AddDependentResponse$outboundSchema` instead. */
    export const outboundSchema = AddDependentResponse$outboundSchema;
    /** @deprecated use `AddDependentResponse$Outbound` instead. */
    export type Outbound = AddDependentResponse$Outbound;
}
