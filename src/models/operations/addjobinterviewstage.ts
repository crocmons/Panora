/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddJobInterviewStageRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedJobInterviewStageInput: components.UnifiedJobInterviewStageInput;
};

export type AddJobInterviewStageResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedJobInterviewStageOutput | undefined;
};

export type AddJobInterviewStageResponse =
    | components.UnifiedJobInterviewStageOutput
    | AddJobInterviewStageResponseBody;

/** @internal */
export const AddJobInterviewStageRequest$inboundSchema: z.ZodType<
    AddJobInterviewStageRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedJobInterviewStageInput: components.UnifiedJobInterviewStageInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedJobInterviewStageInput: "unifiedJobInterviewStageInput",
        });
    });

/** @internal */
export type AddJobInterviewStageRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedJobInterviewStageInput: components.UnifiedJobInterviewStageInput$Outbound;
};

/** @internal */
export const AddJobInterviewStageRequest$outboundSchema: z.ZodType<
    AddJobInterviewStageRequest$Outbound,
    z.ZodTypeDef,
    AddJobInterviewStageRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedJobInterviewStageInput: components.UnifiedJobInterviewStageInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedJobInterviewStageInput: "UnifiedJobInterviewStageInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddJobInterviewStageRequest$ {
    /** @deprecated use `AddJobInterviewStageRequest$inboundSchema` instead. */
    export const inboundSchema = AddJobInterviewStageRequest$inboundSchema;
    /** @deprecated use `AddJobInterviewStageRequest$outboundSchema` instead. */
    export const outboundSchema = AddJobInterviewStageRequest$outboundSchema;
    /** @deprecated use `AddJobInterviewStageRequest$Outbound` instead. */
    export type Outbound = AddJobInterviewStageRequest$Outbound;
}

/** @internal */
export const AddJobInterviewStageResponseBody$inboundSchema: z.ZodType<
    AddJobInterviewStageResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedJobInterviewStageOutput$inboundSchema.optional(),
});

/** @internal */
export type AddJobInterviewStageResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedJobInterviewStageOutput$Outbound | undefined;
};

/** @internal */
export const AddJobInterviewStageResponseBody$outboundSchema: z.ZodType<
    AddJobInterviewStageResponseBody$Outbound,
    z.ZodTypeDef,
    AddJobInterviewStageResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedJobInterviewStageOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddJobInterviewStageResponseBody$ {
    /** @deprecated use `AddJobInterviewStageResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddJobInterviewStageResponseBody$inboundSchema;
    /** @deprecated use `AddJobInterviewStageResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddJobInterviewStageResponseBody$outboundSchema;
    /** @deprecated use `AddJobInterviewStageResponseBody$Outbound` instead. */
    export type Outbound = AddJobInterviewStageResponseBody$Outbound;
}

/** @internal */
export const AddJobInterviewStageResponse$inboundSchema: z.ZodType<
    AddJobInterviewStageResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedJobInterviewStageOutput$inboundSchema,
    z.lazy(() => AddJobInterviewStageResponseBody$inboundSchema),
]);

/** @internal */
export type AddJobInterviewStageResponse$Outbound =
    | components.UnifiedJobInterviewStageOutput$Outbound
    | AddJobInterviewStageResponseBody$Outbound;

/** @internal */
export const AddJobInterviewStageResponse$outboundSchema: z.ZodType<
    AddJobInterviewStageResponse$Outbound,
    z.ZodTypeDef,
    AddJobInterviewStageResponse
> = z.union([
    components.UnifiedJobInterviewStageOutput$outboundSchema,
    z.lazy(() => AddJobInterviewStageResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddJobInterviewStageResponse$ {
    /** @deprecated use `AddJobInterviewStageResponse$inboundSchema` instead. */
    export const inboundSchema = AddJobInterviewStageResponse$inboundSchema;
    /** @deprecated use `AddJobInterviewStageResponse$outboundSchema` instead. */
    export const outboundSchema = AddJobInterviewStageResponse$outboundSchema;
    /** @deprecated use `AddJobInterviewStageResponse$Outbound` instead. */
    export type Outbound = AddJobInterviewStageResponse$Outbound;
}
