/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddJournalEntryRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Accounting software.
     */
    remoteData?: boolean | undefined;
    unifiedJournalEntryInput: components.UnifiedJournalEntryInput;
};

export type AddJournalEntryResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedJournalEntryOutput | undefined;
};

export type AddJournalEntryResponse =
    | components.UnifiedJournalEntryOutput
    | AddJournalEntryResponseBody;

/** @internal */
export const AddJournalEntryRequest$inboundSchema: z.ZodType<
    AddJournalEntryRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedJournalEntryInput: components.UnifiedJournalEntryInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedJournalEntryInput: "unifiedJournalEntryInput",
        });
    });

/** @internal */
export type AddJournalEntryRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedJournalEntryInput: components.UnifiedJournalEntryInput$Outbound;
};

/** @internal */
export const AddJournalEntryRequest$outboundSchema: z.ZodType<
    AddJournalEntryRequest$Outbound,
    z.ZodTypeDef,
    AddJournalEntryRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedJournalEntryInput: components.UnifiedJournalEntryInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedJournalEntryInput: "UnifiedJournalEntryInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddJournalEntryRequest$ {
    /** @deprecated use `AddJournalEntryRequest$inboundSchema` instead. */
    export const inboundSchema = AddJournalEntryRequest$inboundSchema;
    /** @deprecated use `AddJournalEntryRequest$outboundSchema` instead. */
    export const outboundSchema = AddJournalEntryRequest$outboundSchema;
    /** @deprecated use `AddJournalEntryRequest$Outbound` instead. */
    export type Outbound = AddJournalEntryRequest$Outbound;
}

/** @internal */
export const AddJournalEntryResponseBody$inboundSchema: z.ZodType<
    AddJournalEntryResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedJournalEntryOutput$inboundSchema.optional(),
});

/** @internal */
export type AddJournalEntryResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedJournalEntryOutput$Outbound | undefined;
};

/** @internal */
export const AddJournalEntryResponseBody$outboundSchema: z.ZodType<
    AddJournalEntryResponseBody$Outbound,
    z.ZodTypeDef,
    AddJournalEntryResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedJournalEntryOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddJournalEntryResponseBody$ {
    /** @deprecated use `AddJournalEntryResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddJournalEntryResponseBody$inboundSchema;
    /** @deprecated use `AddJournalEntryResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddJournalEntryResponseBody$outboundSchema;
    /** @deprecated use `AddJournalEntryResponseBody$Outbound` instead. */
    export type Outbound = AddJournalEntryResponseBody$Outbound;
}

/** @internal */
export const AddJournalEntryResponse$inboundSchema: z.ZodType<
    AddJournalEntryResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedJournalEntryOutput$inboundSchema,
    z.lazy(() => AddJournalEntryResponseBody$inboundSchema),
]);

/** @internal */
export type AddJournalEntryResponse$Outbound =
    | components.UnifiedJournalEntryOutput$Outbound
    | AddJournalEntryResponseBody$Outbound;

/** @internal */
export const AddJournalEntryResponse$outboundSchema: z.ZodType<
    AddJournalEntryResponse$Outbound,
    z.ZodTypeDef,
    AddJournalEntryResponse
> = z.union([
    components.UnifiedJournalEntryOutput$outboundSchema,
    z.lazy(() => AddJournalEntryResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddJournalEntryResponse$ {
    /** @deprecated use `AddJournalEntryResponse$inboundSchema` instead. */
    export const inboundSchema = AddJournalEntryResponse$inboundSchema;
    /** @deprecated use `AddJournalEntryResponse$outboundSchema` instead. */
    export const outboundSchema = AddJournalEntryResponse$outboundSchema;
    /** @deprecated use `AddJournalEntryResponse$Outbound` instead. */
    export type Outbound = AddJournalEntryResponse$Outbound;
}
