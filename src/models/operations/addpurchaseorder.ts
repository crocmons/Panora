/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddPurchaseOrderRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Accounting software.
     */
    remoteData?: boolean | undefined;
    unifiedPurchaseOrderInput: components.UnifiedPurchaseOrderInput;
};

export type AddPurchaseOrderResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedPurchaseOrderOutput | undefined;
};

export type AddPurchaseOrderResponse =
    | components.UnifiedPurchaseOrderOutput
    | AddPurchaseOrderResponseBody;

/** @internal */
export const AddPurchaseOrderRequest$inboundSchema: z.ZodType<
    AddPurchaseOrderRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedPurchaseOrderInput: components.UnifiedPurchaseOrderInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedPurchaseOrderInput: "unifiedPurchaseOrderInput",
        });
    });

/** @internal */
export type AddPurchaseOrderRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedPurchaseOrderInput: components.UnifiedPurchaseOrderInput$Outbound;
};

/** @internal */
export const AddPurchaseOrderRequest$outboundSchema: z.ZodType<
    AddPurchaseOrderRequest$Outbound,
    z.ZodTypeDef,
    AddPurchaseOrderRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedPurchaseOrderInput: components.UnifiedPurchaseOrderInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedPurchaseOrderInput: "UnifiedPurchaseOrderInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPurchaseOrderRequest$ {
    /** @deprecated use `AddPurchaseOrderRequest$inboundSchema` instead. */
    export const inboundSchema = AddPurchaseOrderRequest$inboundSchema;
    /** @deprecated use `AddPurchaseOrderRequest$outboundSchema` instead. */
    export const outboundSchema = AddPurchaseOrderRequest$outboundSchema;
    /** @deprecated use `AddPurchaseOrderRequest$Outbound` instead. */
    export type Outbound = AddPurchaseOrderRequest$Outbound;
}

/** @internal */
export const AddPurchaseOrderResponseBody$inboundSchema: z.ZodType<
    AddPurchaseOrderResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedPurchaseOrderOutput$inboundSchema.optional(),
});

/** @internal */
export type AddPurchaseOrderResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedPurchaseOrderOutput$Outbound | undefined;
};

/** @internal */
export const AddPurchaseOrderResponseBody$outboundSchema: z.ZodType<
    AddPurchaseOrderResponseBody$Outbound,
    z.ZodTypeDef,
    AddPurchaseOrderResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedPurchaseOrderOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPurchaseOrderResponseBody$ {
    /** @deprecated use `AddPurchaseOrderResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddPurchaseOrderResponseBody$inboundSchema;
    /** @deprecated use `AddPurchaseOrderResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddPurchaseOrderResponseBody$outboundSchema;
    /** @deprecated use `AddPurchaseOrderResponseBody$Outbound` instead. */
    export type Outbound = AddPurchaseOrderResponseBody$Outbound;
}

/** @internal */
export const AddPurchaseOrderResponse$inboundSchema: z.ZodType<
    AddPurchaseOrderResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedPurchaseOrderOutput$inboundSchema,
    z.lazy(() => AddPurchaseOrderResponseBody$inboundSchema),
]);

/** @internal */
export type AddPurchaseOrderResponse$Outbound =
    | components.UnifiedPurchaseOrderOutput$Outbound
    | AddPurchaseOrderResponseBody$Outbound;

/** @internal */
export const AddPurchaseOrderResponse$outboundSchema: z.ZodType<
    AddPurchaseOrderResponse$Outbound,
    z.ZodTypeDef,
    AddPurchaseOrderResponse
> = z.union([
    components.UnifiedPurchaseOrderOutput$outboundSchema,
    z.lazy(() => AddPurchaseOrderResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPurchaseOrderResponse$ {
    /** @deprecated use `AddPurchaseOrderResponse$inboundSchema` instead. */
    export const inboundSchema = AddPurchaseOrderResponse$inboundSchema;
    /** @deprecated use `AddPurchaseOrderResponse$outboundSchema` instead. */
    export const outboundSchema = AddPurchaseOrderResponse$outboundSchema;
    /** @deprecated use `AddPurchaseOrderResponse$Outbound` instead. */
    export type Outbound = AddPurchaseOrderResponse$Outbound;
}
