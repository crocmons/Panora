/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetTicketingContactRequest = {
    /**
     * id of the contact you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Ticketing software.
     */
    remoteData?: boolean | undefined;
};

export type GetTicketingContactResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedContactOutput | undefined;
};

/** @internal */
export const GetTicketingContactRequest$inboundSchema: z.ZodType<
    GetTicketingContactRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remote_data: "remoteData",
        });
    });

/** @internal */
export type GetTicketingContactRequest$Outbound = {
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetTicketingContactRequest$outboundSchema: z.ZodType<
    GetTicketingContactRequest$Outbound,
    z.ZodTypeDef,
    GetTicketingContactRequest
> = z
    .object({
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTicketingContactRequest$ {
    /** @deprecated use `GetTicketingContactRequest$inboundSchema` instead. */
    export const inboundSchema = GetTicketingContactRequest$inboundSchema;
    /** @deprecated use `GetTicketingContactRequest$outboundSchema` instead. */
    export const outboundSchema = GetTicketingContactRequest$outboundSchema;
    /** @deprecated use `GetTicketingContactRequest$Outbound` instead. */
    export type Outbound = GetTicketingContactRequest$Outbound;
}

/** @internal */
export const GetTicketingContactResponseBody$inboundSchema: z.ZodType<
    GetTicketingContactResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedContactOutput$inboundSchema.optional(),
});

/** @internal */
export type GetTicketingContactResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedContactOutput$Outbound | undefined;
};

/** @internal */
export const GetTicketingContactResponseBody$outboundSchema: z.ZodType<
    GetTicketingContactResponseBody$Outbound,
    z.ZodTypeDef,
    GetTicketingContactResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedContactOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTicketingContactResponseBody$ {
    /** @deprecated use `GetTicketingContactResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetTicketingContactResponseBody$inboundSchema;
    /** @deprecated use `GetTicketingContactResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetTicketingContactResponseBody$outboundSchema;
    /** @deprecated use `GetTicketingContactResponseBody$Outbound` instead. */
    export type Outbound = GetTicketingContactResponseBody$Outbound;
}
