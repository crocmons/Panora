/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddOfferRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedOfferInput: components.UnifiedOfferInput;
};

export type AddOfferResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedOfferOutput | undefined;
};

export type AddOfferResponse = components.UnifiedOfferOutput | AddOfferResponseBody;

/** @internal */
export const AddOfferRequest$inboundSchema: z.ZodType<AddOfferRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedOfferInput: components.UnifiedOfferInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedOfferInput: "unifiedOfferInput",
        });
    });

/** @internal */
export type AddOfferRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedOfferInput: components.UnifiedOfferInput$Outbound;
};

/** @internal */
export const AddOfferRequest$outboundSchema: z.ZodType<
    AddOfferRequest$Outbound,
    z.ZodTypeDef,
    AddOfferRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedOfferInput: components.UnifiedOfferInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedOfferInput: "UnifiedOfferInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddOfferRequest$ {
    /** @deprecated use `AddOfferRequest$inboundSchema` instead. */
    export const inboundSchema = AddOfferRequest$inboundSchema;
    /** @deprecated use `AddOfferRequest$outboundSchema` instead. */
    export const outboundSchema = AddOfferRequest$outboundSchema;
    /** @deprecated use `AddOfferRequest$Outbound` instead. */
    export type Outbound = AddOfferRequest$Outbound;
}

/** @internal */
export const AddOfferResponseBody$inboundSchema: z.ZodType<
    AddOfferResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedOfferOutput$inboundSchema.optional(),
});

/** @internal */
export type AddOfferResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedOfferOutput$Outbound | undefined;
};

/** @internal */
export const AddOfferResponseBody$outboundSchema: z.ZodType<
    AddOfferResponseBody$Outbound,
    z.ZodTypeDef,
    AddOfferResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedOfferOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddOfferResponseBody$ {
    /** @deprecated use `AddOfferResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddOfferResponseBody$inboundSchema;
    /** @deprecated use `AddOfferResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddOfferResponseBody$outboundSchema;
    /** @deprecated use `AddOfferResponseBody$Outbound` instead. */
    export type Outbound = AddOfferResponseBody$Outbound;
}

/** @internal */
export const AddOfferResponse$inboundSchema: z.ZodType<AddOfferResponse, z.ZodTypeDef, unknown> =
    z.union([
        components.UnifiedOfferOutput$inboundSchema,
        z.lazy(() => AddOfferResponseBody$inboundSchema),
    ]);

/** @internal */
export type AddOfferResponse$Outbound =
    | components.UnifiedOfferOutput$Outbound
    | AddOfferResponseBody$Outbound;

/** @internal */
export const AddOfferResponse$outboundSchema: z.ZodType<
    AddOfferResponse$Outbound,
    z.ZodTypeDef,
    AddOfferResponse
> = z.union([
    components.UnifiedOfferOutput$outboundSchema,
    z.lazy(() => AddOfferResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddOfferResponse$ {
    /** @deprecated use `AddOfferResponse$inboundSchema` instead. */
    export const inboundSchema = AddOfferResponse$inboundSchema;
    /** @deprecated use `AddOfferResponse$outboundSchema` instead. */
    export const outboundSchema = AddOfferResponse$outboundSchema;
    /** @deprecated use `AddOfferResponse$Outbound` instead. */
    export type Outbound = AddOfferResponse$Outbound;
}
