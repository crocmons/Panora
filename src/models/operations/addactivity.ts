/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddActivityRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedActivityInput: components.UnifiedActivityInput;
};

export type AddActivityResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedActivityOutput | undefined;
};

export type AddActivityResponse = components.UnifiedActivityOutput | AddActivityResponseBody;

/** @internal */
export const AddActivityRequest$inboundSchema: z.ZodType<
    AddActivityRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedActivityInput: components.UnifiedActivityInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedActivityInput: "unifiedActivityInput",
        });
    });

/** @internal */
export type AddActivityRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedActivityInput: components.UnifiedActivityInput$Outbound;
};

/** @internal */
export const AddActivityRequest$outboundSchema: z.ZodType<
    AddActivityRequest$Outbound,
    z.ZodTypeDef,
    AddActivityRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedActivityInput: components.UnifiedActivityInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedActivityInput: "UnifiedActivityInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddActivityRequest$ {
    /** @deprecated use `AddActivityRequest$inboundSchema` instead. */
    export const inboundSchema = AddActivityRequest$inboundSchema;
    /** @deprecated use `AddActivityRequest$outboundSchema` instead. */
    export const outboundSchema = AddActivityRequest$outboundSchema;
    /** @deprecated use `AddActivityRequest$Outbound` instead. */
    export type Outbound = AddActivityRequest$Outbound;
}

/** @internal */
export const AddActivityResponseBody$inboundSchema: z.ZodType<
    AddActivityResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedActivityOutput$inboundSchema.optional(),
});

/** @internal */
export type AddActivityResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedActivityOutput$Outbound | undefined;
};

/** @internal */
export const AddActivityResponseBody$outboundSchema: z.ZodType<
    AddActivityResponseBody$Outbound,
    z.ZodTypeDef,
    AddActivityResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedActivityOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddActivityResponseBody$ {
    /** @deprecated use `AddActivityResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddActivityResponseBody$inboundSchema;
    /** @deprecated use `AddActivityResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddActivityResponseBody$outboundSchema;
    /** @deprecated use `AddActivityResponseBody$Outbound` instead. */
    export type Outbound = AddActivityResponseBody$Outbound;
}

/** @internal */
export const AddActivityResponse$inboundSchema: z.ZodType<
    AddActivityResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedActivityOutput$inboundSchema,
    z.lazy(() => AddActivityResponseBody$inboundSchema),
]);

/** @internal */
export type AddActivityResponse$Outbound =
    | components.UnifiedActivityOutput$Outbound
    | AddActivityResponseBody$Outbound;

/** @internal */
export const AddActivityResponse$outboundSchema: z.ZodType<
    AddActivityResponse$Outbound,
    z.ZodTypeDef,
    AddActivityResponse
> = z.union([
    components.UnifiedActivityOutput$outboundSchema,
    z.lazy(() => AddActivityResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddActivityResponse$ {
    /** @deprecated use `AddActivityResponse$inboundSchema` instead. */
    export const inboundSchema = AddActivityResponse$inboundSchema;
    /** @deprecated use `AddActivityResponse$outboundSchema` instead. */
    export const outboundSchema = AddActivityResponse$outboundSchema;
    /** @deprecated use `AddActivityResponse$Outbound` instead. */
    export type Outbound = AddActivityResponse$Outbound;
}
