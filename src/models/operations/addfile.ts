/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddFileRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Filestorage software.
     */
    remoteData?: boolean | undefined;
    unifiedFileInput: components.UnifiedFileInput;
};

export type AddFileResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedFileOutput | undefined;
};

export type AddFileResponse = components.UnifiedFileOutput | AddFileResponseBody;

/** @internal */
export const AddFileRequest$inboundSchema: z.ZodType<AddFileRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedFileInput: components.UnifiedFileInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedFileInput: "unifiedFileInput",
        });
    });

/** @internal */
export type AddFileRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedFileInput: components.UnifiedFileInput$Outbound;
};

/** @internal */
export const AddFileRequest$outboundSchema: z.ZodType<
    AddFileRequest$Outbound,
    z.ZodTypeDef,
    AddFileRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedFileInput: components.UnifiedFileInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedFileInput: "UnifiedFileInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddFileRequest$ {
    /** @deprecated use `AddFileRequest$inboundSchema` instead. */
    export const inboundSchema = AddFileRequest$inboundSchema;
    /** @deprecated use `AddFileRequest$outboundSchema` instead. */
    export const outboundSchema = AddFileRequest$outboundSchema;
    /** @deprecated use `AddFileRequest$Outbound` instead. */
    export type Outbound = AddFileRequest$Outbound;
}

/** @internal */
export const AddFileResponseBody$inboundSchema: z.ZodType<
    AddFileResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedFileOutput$inboundSchema.optional(),
});

/** @internal */
export type AddFileResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedFileOutput$Outbound | undefined;
};

/** @internal */
export const AddFileResponseBody$outboundSchema: z.ZodType<
    AddFileResponseBody$Outbound,
    z.ZodTypeDef,
    AddFileResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedFileOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddFileResponseBody$ {
    /** @deprecated use `AddFileResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddFileResponseBody$inboundSchema;
    /** @deprecated use `AddFileResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddFileResponseBody$outboundSchema;
    /** @deprecated use `AddFileResponseBody$Outbound` instead. */
    export type Outbound = AddFileResponseBody$Outbound;
}

/** @internal */
export const AddFileResponse$inboundSchema: z.ZodType<AddFileResponse, z.ZodTypeDef, unknown> =
    z.union([
        components.UnifiedFileOutput$inboundSchema,
        z.lazy(() => AddFileResponseBody$inboundSchema),
    ]);

/** @internal */
export type AddFileResponse$Outbound =
    | components.UnifiedFileOutput$Outbound
    | AddFileResponseBody$Outbound;

/** @internal */
export const AddFileResponse$outboundSchema: z.ZodType<
    AddFileResponse$Outbound,
    z.ZodTypeDef,
    AddFileResponse
> = z.union([
    components.UnifiedFileOutput$outboundSchema,
    z.lazy(() => AddFileResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddFileResponse$ {
    /** @deprecated use `AddFileResponse$inboundSchema` instead. */
    export const inboundSchema = AddFileResponse$inboundSchema;
    /** @deprecated use `AddFileResponse$outboundSchema` instead. */
    export const outboundSchema = AddFileResponse$outboundSchema;
    /** @deprecated use `AddFileResponse$Outbound` instead. */
    export type Outbound = AddFileResponse$Outbound;
}
