/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type HandleThirdPartyWebhookRequest = {
    endpointUuid: string;
};

/** @internal */
export const HandleThirdPartyWebhookRequest$inboundSchema: z.ZodType<
    HandleThirdPartyWebhookRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        endpoint_uuid: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            endpoint_uuid: "endpointUuid",
        });
    });

/** @internal */
export type HandleThirdPartyWebhookRequest$Outbound = {
    endpoint_uuid: string;
};

/** @internal */
export const HandleThirdPartyWebhookRequest$outboundSchema: z.ZodType<
    HandleThirdPartyWebhookRequest$Outbound,
    z.ZodTypeDef,
    HandleThirdPartyWebhookRequest
> = z
    .object({
        endpointUuid: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            endpointUuid: "endpoint_uuid",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HandleThirdPartyWebhookRequest$ {
    /** @deprecated use `HandleThirdPartyWebhookRequest$inboundSchema` instead. */
    export const inboundSchema = HandleThirdPartyWebhookRequest$inboundSchema;
    /** @deprecated use `HandleThirdPartyWebhookRequest$outboundSchema` instead. */
    export const outboundSchema = HandleThirdPartyWebhookRequest$outboundSchema;
    /** @deprecated use `HandleThirdPartyWebhookRequest$Outbound` instead. */
    export type Outbound = HandleThirdPartyWebhookRequest$Outbound;
}
