/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddJobRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedJobInput: components.UnifiedJobInput;
};

export type AddJobResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedJobOutput | undefined;
};

export type AddJobResponse = components.UnifiedJobOutput | AddJobResponseBody;

/** @internal */
export const AddJobRequest$inboundSchema: z.ZodType<AddJobRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedJobInput: components.UnifiedJobInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedJobInput: "unifiedJobInput",
        });
    });

/** @internal */
export type AddJobRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedJobInput: components.UnifiedJobInput$Outbound;
};

/** @internal */
export const AddJobRequest$outboundSchema: z.ZodType<
    AddJobRequest$Outbound,
    z.ZodTypeDef,
    AddJobRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedJobInput: components.UnifiedJobInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedJobInput: "UnifiedJobInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddJobRequest$ {
    /** @deprecated use `AddJobRequest$inboundSchema` instead. */
    export const inboundSchema = AddJobRequest$inboundSchema;
    /** @deprecated use `AddJobRequest$outboundSchema` instead. */
    export const outboundSchema = AddJobRequest$outboundSchema;
    /** @deprecated use `AddJobRequest$Outbound` instead. */
    export type Outbound = AddJobRequest$Outbound;
}

/** @internal */
export const AddJobResponseBody$inboundSchema: z.ZodType<
    AddJobResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedJobOutput$inboundSchema.optional(),
});

/** @internal */
export type AddJobResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedJobOutput$Outbound | undefined;
};

/** @internal */
export const AddJobResponseBody$outboundSchema: z.ZodType<
    AddJobResponseBody$Outbound,
    z.ZodTypeDef,
    AddJobResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedJobOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddJobResponseBody$ {
    /** @deprecated use `AddJobResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddJobResponseBody$inboundSchema;
    /** @deprecated use `AddJobResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddJobResponseBody$outboundSchema;
    /** @deprecated use `AddJobResponseBody$Outbound` instead. */
    export type Outbound = AddJobResponseBody$Outbound;
}

/** @internal */
export const AddJobResponse$inboundSchema: z.ZodType<AddJobResponse, z.ZodTypeDef, unknown> =
    z.union([
        components.UnifiedJobOutput$inboundSchema,
        z.lazy(() => AddJobResponseBody$inboundSchema),
    ]);

/** @internal */
export type AddJobResponse$Outbound =
    | components.UnifiedJobOutput$Outbound
    | AddJobResponseBody$Outbound;

/** @internal */
export const AddJobResponse$outboundSchema: z.ZodType<
    AddJobResponse$Outbound,
    z.ZodTypeDef,
    AddJobResponse
> = z.union([
    components.UnifiedJobOutput$outboundSchema,
    z.lazy(() => AddJobResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddJobResponse$ {
    /** @deprecated use `AddJobResponse$inboundSchema` instead. */
    export const inboundSchema = AddJobResponse$inboundSchema;
    /** @deprecated use `AddJobResponse$outboundSchema` instead. */
    export const outboundSchema = AddJobResponse$outboundSchema;
    /** @deprecated use `AddJobResponse$Outbound` instead. */
    export type Outbound = AddJobResponse$Outbound;
}
