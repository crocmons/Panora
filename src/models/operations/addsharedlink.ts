/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddSharedlinkRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Filestorage software.
     */
    remoteData?: boolean | undefined;
    unifiedSharedLinkInput: components.UnifiedSharedLinkInput;
};

export type AddSharedlinkResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedSharedLinkOutput | undefined;
};

export type AddSharedlinkResponse = components.UnifiedSharedLinkOutput | AddSharedlinkResponseBody;

/** @internal */
export const AddSharedlinkRequest$inboundSchema: z.ZodType<
    AddSharedlinkRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedSharedLinkInput: components.UnifiedSharedLinkInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedSharedLinkInput: "unifiedSharedLinkInput",
        });
    });

/** @internal */
export type AddSharedlinkRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedSharedLinkInput: components.UnifiedSharedLinkInput$Outbound;
};

/** @internal */
export const AddSharedlinkRequest$outboundSchema: z.ZodType<
    AddSharedlinkRequest$Outbound,
    z.ZodTypeDef,
    AddSharedlinkRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedSharedLinkInput: components.UnifiedSharedLinkInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedSharedLinkInput: "UnifiedSharedLinkInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddSharedlinkRequest$ {
    /** @deprecated use `AddSharedlinkRequest$inboundSchema` instead. */
    export const inboundSchema = AddSharedlinkRequest$inboundSchema;
    /** @deprecated use `AddSharedlinkRequest$outboundSchema` instead. */
    export const outboundSchema = AddSharedlinkRequest$outboundSchema;
    /** @deprecated use `AddSharedlinkRequest$Outbound` instead. */
    export type Outbound = AddSharedlinkRequest$Outbound;
}

/** @internal */
export const AddSharedlinkResponseBody$inboundSchema: z.ZodType<
    AddSharedlinkResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedSharedLinkOutput$inboundSchema.optional(),
});

/** @internal */
export type AddSharedlinkResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedSharedLinkOutput$Outbound | undefined;
};

/** @internal */
export const AddSharedlinkResponseBody$outboundSchema: z.ZodType<
    AddSharedlinkResponseBody$Outbound,
    z.ZodTypeDef,
    AddSharedlinkResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedSharedLinkOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddSharedlinkResponseBody$ {
    /** @deprecated use `AddSharedlinkResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddSharedlinkResponseBody$inboundSchema;
    /** @deprecated use `AddSharedlinkResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddSharedlinkResponseBody$outboundSchema;
    /** @deprecated use `AddSharedlinkResponseBody$Outbound` instead. */
    export type Outbound = AddSharedlinkResponseBody$Outbound;
}

/** @internal */
export const AddSharedlinkResponse$inboundSchema: z.ZodType<
    AddSharedlinkResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedSharedLinkOutput$inboundSchema,
    z.lazy(() => AddSharedlinkResponseBody$inboundSchema),
]);

/** @internal */
export type AddSharedlinkResponse$Outbound =
    | components.UnifiedSharedLinkOutput$Outbound
    | AddSharedlinkResponseBody$Outbound;

/** @internal */
export const AddSharedlinkResponse$outboundSchema: z.ZodType<
    AddSharedlinkResponse$Outbound,
    z.ZodTypeDef,
    AddSharedlinkResponse
> = z.union([
    components.UnifiedSharedLinkOutput$outboundSchema,
    z.lazy(() => AddSharedlinkResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddSharedlinkResponse$ {
    /** @deprecated use `AddSharedlinkResponse$inboundSchema` instead. */
    export const inboundSchema = AddSharedlinkResponse$inboundSchema;
    /** @deprecated use `AddSharedlinkResponse$outboundSchema` instead. */
    export const outboundSchema = AddSharedlinkResponse$outboundSchema;
    /** @deprecated use `AddSharedlinkResponse$Outbound` instead. */
    export type Outbound = AddSharedlinkResponse$Outbound;
}
