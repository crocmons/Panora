/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddActionRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
    unifiedActionInput: components.UnifiedActionInput;
};

export type AddActionResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedActionOutput | undefined;
};

export type AddActionResponse = components.UnifiedActionOutput | AddActionResponseBody;

/** @internal */
export const AddActionRequest$inboundSchema: z.ZodType<AddActionRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedActionInput: components.UnifiedActionInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedActionInput: "unifiedActionInput",
        });
    });

/** @internal */
export type AddActionRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedActionInput: components.UnifiedActionInput$Outbound;
};

/** @internal */
export const AddActionRequest$outboundSchema: z.ZodType<
    AddActionRequest$Outbound,
    z.ZodTypeDef,
    AddActionRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedActionInput: components.UnifiedActionInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedActionInput: "UnifiedActionInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddActionRequest$ {
    /** @deprecated use `AddActionRequest$inboundSchema` instead. */
    export const inboundSchema = AddActionRequest$inboundSchema;
    /** @deprecated use `AddActionRequest$outboundSchema` instead. */
    export const outboundSchema = AddActionRequest$outboundSchema;
    /** @deprecated use `AddActionRequest$Outbound` instead. */
    export type Outbound = AddActionRequest$Outbound;
}

/** @internal */
export const AddActionResponseBody$inboundSchema: z.ZodType<
    AddActionResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedActionOutput$inboundSchema.optional(),
});

/** @internal */
export type AddActionResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedActionOutput$Outbound | undefined;
};

/** @internal */
export const AddActionResponseBody$outboundSchema: z.ZodType<
    AddActionResponseBody$Outbound,
    z.ZodTypeDef,
    AddActionResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedActionOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddActionResponseBody$ {
    /** @deprecated use `AddActionResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddActionResponseBody$inboundSchema;
    /** @deprecated use `AddActionResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddActionResponseBody$outboundSchema;
    /** @deprecated use `AddActionResponseBody$Outbound` instead. */
    export type Outbound = AddActionResponseBody$Outbound;
}

/** @internal */
export const AddActionResponse$inboundSchema: z.ZodType<AddActionResponse, z.ZodTypeDef, unknown> =
    z.union([
        components.UnifiedActionOutput$inboundSchema,
        z.lazy(() => AddActionResponseBody$inboundSchema),
    ]);

/** @internal */
export type AddActionResponse$Outbound =
    | components.UnifiedActionOutput$Outbound
    | AddActionResponseBody$Outbound;

/** @internal */
export const AddActionResponse$outboundSchema: z.ZodType<
    AddActionResponse$Outbound,
    z.ZodTypeDef,
    AddActionResponse
> = z.union([
    components.UnifiedActionOutput$outboundSchema,
    z.lazy(() => AddActionResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddActionResponse$ {
    /** @deprecated use `AddActionResponse$inboundSchema` instead. */
    export const inboundSchema = AddActionResponse$inboundSchema;
    /** @deprecated use `AddActionResponse$outboundSchema` instead. */
    export const outboundSchema = AddActionResponse$outboundSchema;
    /** @deprecated use `AddActionResponse$Outbound` instead. */
    export type Outbound = AddActionResponse$Outbound;
}
