/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetEeocsRequest = {
    /**
     * id of the eeocs you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
};

export type GetEeocsResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedEeocsOutput | undefined;
};

/** @internal */
export const GetEeocsRequest$inboundSchema: z.ZodType<GetEeocsRequest, z.ZodTypeDef, unknown> = z
    .object({
        id: z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remote_data: "remoteData",
        });
    });

/** @internal */
export type GetEeocsRequest$Outbound = {
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetEeocsRequest$outboundSchema: z.ZodType<
    GetEeocsRequest$Outbound,
    z.ZodTypeDef,
    GetEeocsRequest
> = z
    .object({
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEeocsRequest$ {
    /** @deprecated use `GetEeocsRequest$inboundSchema` instead. */
    export const inboundSchema = GetEeocsRequest$inboundSchema;
    /** @deprecated use `GetEeocsRequest$outboundSchema` instead. */
    export const outboundSchema = GetEeocsRequest$outboundSchema;
    /** @deprecated use `GetEeocsRequest$Outbound` instead. */
    export type Outbound = GetEeocsRequest$Outbound;
}

/** @internal */
export const GetEeocsResponseBody$inboundSchema: z.ZodType<
    GetEeocsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedEeocsOutput$inboundSchema.optional(),
});

/** @internal */
export type GetEeocsResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedEeocsOutput$Outbound | undefined;
};

/** @internal */
export const GetEeocsResponseBody$outboundSchema: z.ZodType<
    GetEeocsResponseBody$Outbound,
    z.ZodTypeDef,
    GetEeocsResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedEeocsOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEeocsResponseBody$ {
    /** @deprecated use `GetEeocsResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetEeocsResponseBody$inboundSchema;
    /** @deprecated use `GetEeocsResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetEeocsResponseBody$outboundSchema;
    /** @deprecated use `GetEeocsResponseBody$Outbound` instead. */
    export type Outbound = GetEeocsResponseBody$Outbound;
}
