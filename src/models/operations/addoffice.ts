/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddOfficeRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedOfficeInput: components.UnifiedOfficeInput;
};

export type AddOfficeResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedOfficeOutput | undefined;
};

export type AddOfficeResponse = components.UnifiedOfficeOutput | AddOfficeResponseBody;

/** @internal */
export const AddOfficeRequest$inboundSchema: z.ZodType<AddOfficeRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedOfficeInput: components.UnifiedOfficeInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedOfficeInput: "unifiedOfficeInput",
        });
    });

/** @internal */
export type AddOfficeRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedOfficeInput: components.UnifiedOfficeInput$Outbound;
};

/** @internal */
export const AddOfficeRequest$outboundSchema: z.ZodType<
    AddOfficeRequest$Outbound,
    z.ZodTypeDef,
    AddOfficeRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedOfficeInput: components.UnifiedOfficeInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedOfficeInput: "UnifiedOfficeInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddOfficeRequest$ {
    /** @deprecated use `AddOfficeRequest$inboundSchema` instead. */
    export const inboundSchema = AddOfficeRequest$inboundSchema;
    /** @deprecated use `AddOfficeRequest$outboundSchema` instead. */
    export const outboundSchema = AddOfficeRequest$outboundSchema;
    /** @deprecated use `AddOfficeRequest$Outbound` instead. */
    export type Outbound = AddOfficeRequest$Outbound;
}

/** @internal */
export const AddOfficeResponseBody$inboundSchema: z.ZodType<
    AddOfficeResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedOfficeOutput$inboundSchema.optional(),
});

/** @internal */
export type AddOfficeResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedOfficeOutput$Outbound | undefined;
};

/** @internal */
export const AddOfficeResponseBody$outboundSchema: z.ZodType<
    AddOfficeResponseBody$Outbound,
    z.ZodTypeDef,
    AddOfficeResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedOfficeOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddOfficeResponseBody$ {
    /** @deprecated use `AddOfficeResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddOfficeResponseBody$inboundSchema;
    /** @deprecated use `AddOfficeResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddOfficeResponseBody$outboundSchema;
    /** @deprecated use `AddOfficeResponseBody$Outbound` instead. */
    export type Outbound = AddOfficeResponseBody$Outbound;
}

/** @internal */
export const AddOfficeResponse$inboundSchema: z.ZodType<AddOfficeResponse, z.ZodTypeDef, unknown> =
    z.union([
        components.UnifiedOfficeOutput$inboundSchema,
        z.lazy(() => AddOfficeResponseBody$inboundSchema),
    ]);

/** @internal */
export type AddOfficeResponse$Outbound =
    | components.UnifiedOfficeOutput$Outbound
    | AddOfficeResponseBody$Outbound;

/** @internal */
export const AddOfficeResponse$outboundSchema: z.ZodType<
    AddOfficeResponse$Outbound,
    z.ZodTypeDef,
    AddOfficeResponse
> = z.union([
    components.UnifiedOfficeOutput$outboundSchema,
    z.lazy(() => AddOfficeResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddOfficeResponse$ {
    /** @deprecated use `AddOfficeResponse$inboundSchema` instead. */
    export const inboundSchema = AddOfficeResponse$inboundSchema;
    /** @deprecated use `AddOfficeResponse$outboundSchema` instead. */
    export const outboundSchema = AddOfficeResponse$outboundSchema;
    /** @deprecated use `AddOfficeResponse$Outbound` instead. */
    export type Outbound = AddOfficeResponse$Outbound;
}
