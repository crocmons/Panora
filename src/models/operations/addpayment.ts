/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddPaymentRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Accounting software.
     */
    remoteData?: boolean | undefined;
    unifiedPaymentInput: components.UnifiedPaymentInput;
};

export type AddPaymentResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedPaymentOutput | undefined;
};

export type AddPaymentResponse = components.UnifiedPaymentOutput | AddPaymentResponseBody;

/** @internal */
export const AddPaymentRequest$inboundSchema: z.ZodType<AddPaymentRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
            UnifiedPaymentInput: components.UnifiedPaymentInput$inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
                UnifiedPaymentInput: "unifiedPaymentInput",
            });
        });

/** @internal */
export type AddPaymentRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedPaymentInput: components.UnifiedPaymentInput$Outbound;
};

/** @internal */
export const AddPaymentRequest$outboundSchema: z.ZodType<
    AddPaymentRequest$Outbound,
    z.ZodTypeDef,
    AddPaymentRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedPaymentInput: components.UnifiedPaymentInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedPaymentInput: "UnifiedPaymentInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPaymentRequest$ {
    /** @deprecated use `AddPaymentRequest$inboundSchema` instead. */
    export const inboundSchema = AddPaymentRequest$inboundSchema;
    /** @deprecated use `AddPaymentRequest$outboundSchema` instead. */
    export const outboundSchema = AddPaymentRequest$outboundSchema;
    /** @deprecated use `AddPaymentRequest$Outbound` instead. */
    export type Outbound = AddPaymentRequest$Outbound;
}

/** @internal */
export const AddPaymentResponseBody$inboundSchema: z.ZodType<
    AddPaymentResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedPaymentOutput$inboundSchema.optional(),
});

/** @internal */
export type AddPaymentResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedPaymentOutput$Outbound | undefined;
};

/** @internal */
export const AddPaymentResponseBody$outboundSchema: z.ZodType<
    AddPaymentResponseBody$Outbound,
    z.ZodTypeDef,
    AddPaymentResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedPaymentOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPaymentResponseBody$ {
    /** @deprecated use `AddPaymentResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddPaymentResponseBody$inboundSchema;
    /** @deprecated use `AddPaymentResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddPaymentResponseBody$outboundSchema;
    /** @deprecated use `AddPaymentResponseBody$Outbound` instead. */
    export type Outbound = AddPaymentResponseBody$Outbound;
}

/** @internal */
export const AddPaymentResponse$inboundSchema: z.ZodType<
    AddPaymentResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedPaymentOutput$inboundSchema,
    z.lazy(() => AddPaymentResponseBody$inboundSchema),
]);

/** @internal */
export type AddPaymentResponse$Outbound =
    | components.UnifiedPaymentOutput$Outbound
    | AddPaymentResponseBody$Outbound;

/** @internal */
export const AddPaymentResponse$outboundSchema: z.ZodType<
    AddPaymentResponse$Outbound,
    z.ZodTypeDef,
    AddPaymentResponse
> = z.union([
    components.UnifiedPaymentOutput$outboundSchema,
    z.lazy(() => AddPaymentResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPaymentResponse$ {
    /** @deprecated use `AddPaymentResponse$inboundSchema` instead. */
    export const inboundSchema = AddPaymentResponse$inboundSchema;
    /** @deprecated use `AddPaymentResponse$outboundSchema` instead. */
    export const outboundSchema = AddPaymentResponse$outboundSchema;
    /** @deprecated use `AddPaymentResponse$Outbound` instead. */
    export type Outbound = AddPaymentResponse$Outbound;
}
