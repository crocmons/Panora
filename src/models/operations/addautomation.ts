/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddAutomationRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
    unifiedAutomationInput: components.UnifiedAutomationInput;
};

export type AddAutomationResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedAutomationOutput | undefined;
};

export type AddAutomationResponse = components.UnifiedAutomationOutput | AddAutomationResponseBody;

/** @internal */
export const AddAutomationRequest$inboundSchema: z.ZodType<
    AddAutomationRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedAutomationInput: components.UnifiedAutomationInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedAutomationInput: "unifiedAutomationInput",
        });
    });

/** @internal */
export type AddAutomationRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedAutomationInput: components.UnifiedAutomationInput$Outbound;
};

/** @internal */
export const AddAutomationRequest$outboundSchema: z.ZodType<
    AddAutomationRequest$Outbound,
    z.ZodTypeDef,
    AddAutomationRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedAutomationInput: components.UnifiedAutomationInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedAutomationInput: "UnifiedAutomationInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAutomationRequest$ {
    /** @deprecated use `AddAutomationRequest$inboundSchema` instead. */
    export const inboundSchema = AddAutomationRequest$inboundSchema;
    /** @deprecated use `AddAutomationRequest$outboundSchema` instead. */
    export const outboundSchema = AddAutomationRequest$outboundSchema;
    /** @deprecated use `AddAutomationRequest$Outbound` instead. */
    export type Outbound = AddAutomationRequest$Outbound;
}

/** @internal */
export const AddAutomationResponseBody$inboundSchema: z.ZodType<
    AddAutomationResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedAutomationOutput$inboundSchema.optional(),
});

/** @internal */
export type AddAutomationResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedAutomationOutput$Outbound | undefined;
};

/** @internal */
export const AddAutomationResponseBody$outboundSchema: z.ZodType<
    AddAutomationResponseBody$Outbound,
    z.ZodTypeDef,
    AddAutomationResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedAutomationOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAutomationResponseBody$ {
    /** @deprecated use `AddAutomationResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddAutomationResponseBody$inboundSchema;
    /** @deprecated use `AddAutomationResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddAutomationResponseBody$outboundSchema;
    /** @deprecated use `AddAutomationResponseBody$Outbound` instead. */
    export type Outbound = AddAutomationResponseBody$Outbound;
}

/** @internal */
export const AddAutomationResponse$inboundSchema: z.ZodType<
    AddAutomationResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedAutomationOutput$inboundSchema,
    z.lazy(() => AddAutomationResponseBody$inboundSchema),
]);

/** @internal */
export type AddAutomationResponse$Outbound =
    | components.UnifiedAutomationOutput$Outbound
    | AddAutomationResponseBody$Outbound;

/** @internal */
export const AddAutomationResponse$outboundSchema: z.ZodType<
    AddAutomationResponse$Outbound,
    z.ZodTypeDef,
    AddAutomationResponse
> = z.union([
    components.UnifiedAutomationOutput$outboundSchema,
    z.lazy(() => AddAutomationResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAutomationResponse$ {
    /** @deprecated use `AddAutomationResponse$inboundSchema` instead. */
    export const inboundSchema = AddAutomationResponse$inboundSchema;
    /** @deprecated use `AddAutomationResponse$outboundSchema` instead. */
    export const outboundSchema = AddAutomationResponse$outboundSchema;
    /** @deprecated use `AddAutomationResponse$Outbound` instead. */
    export type Outbound = AddAutomationResponse$Outbound;
}
