/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddTagRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedTagInput: components.UnifiedTagInput;
};

export type AddTagResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTagOutput | undefined;
};

export type AddTagResponse = components.UnifiedTagOutput | AddTagResponseBody;

/** @internal */
export const AddTagRequest$inboundSchema: z.ZodType<AddTagRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedTagInput: components.UnifiedTagInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedTagInput: "unifiedTagInput",
        });
    });

/** @internal */
export type AddTagRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedTagInput: components.UnifiedTagInput$Outbound;
};

/** @internal */
export const AddTagRequest$outboundSchema: z.ZodType<
    AddTagRequest$Outbound,
    z.ZodTypeDef,
    AddTagRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedTagInput: components.UnifiedTagInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedTagInput: "UnifiedTagInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTagRequest$ {
    /** @deprecated use `AddTagRequest$inboundSchema` instead. */
    export const inboundSchema = AddTagRequest$inboundSchema;
    /** @deprecated use `AddTagRequest$outboundSchema` instead. */
    export const outboundSchema = AddTagRequest$outboundSchema;
    /** @deprecated use `AddTagRequest$Outbound` instead. */
    export type Outbound = AddTagRequest$Outbound;
}

/** @internal */
export const AddTagResponseBody$inboundSchema: z.ZodType<
    AddTagResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTagOutput$inboundSchema.optional(),
});

/** @internal */
export type AddTagResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTagOutput$Outbound | undefined;
};

/** @internal */
export const AddTagResponseBody$outboundSchema: z.ZodType<
    AddTagResponseBody$Outbound,
    z.ZodTypeDef,
    AddTagResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTagOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTagResponseBody$ {
    /** @deprecated use `AddTagResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddTagResponseBody$inboundSchema;
    /** @deprecated use `AddTagResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddTagResponseBody$outboundSchema;
    /** @deprecated use `AddTagResponseBody$Outbound` instead. */
    export type Outbound = AddTagResponseBody$Outbound;
}

/** @internal */
export const AddTagResponse$inboundSchema: z.ZodType<AddTagResponse, z.ZodTypeDef, unknown> =
    z.union([
        components.UnifiedTagOutput$inboundSchema,
        z.lazy(() => AddTagResponseBody$inboundSchema),
    ]);

/** @internal */
export type AddTagResponse$Outbound =
    | components.UnifiedTagOutput$Outbound
    | AddTagResponseBody$Outbound;

/** @internal */
export const AddTagResponse$outboundSchema: z.ZodType<
    AddTagResponse$Outbound,
    z.ZodTypeDef,
    AddTagResponse
> = z.union([
    components.UnifiedTagOutput$outboundSchema,
    z.lazy(() => AddTagResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTagResponse$ {
    /** @deprecated use `AddTagResponse$inboundSchema` instead. */
    export const inboundSchema = AddTagResponse$inboundSchema;
    /** @deprecated use `AddTagResponse$outboundSchema` instead. */
    export const outboundSchema = AddTagResponse$outboundSchema;
    /** @deprecated use `AddTagResponse$Outbound` instead. */
    export type Outbound = AddTagResponse$Outbound;
}
