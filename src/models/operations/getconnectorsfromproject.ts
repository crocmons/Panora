/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetConnectorsFromProjectRequest = {
    projectId: string;
    getConnectorsFromProject: string;
};

/** @internal */
export const GetConnectorsFromProjectRequest$inboundSchema: z.ZodType<
    GetConnectorsFromProjectRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    projectId: z.string(),
    getConnectorsFromProject: z.string(),
});

/** @internal */
export type GetConnectorsFromProjectRequest$Outbound = {
    projectId: string;
    getConnectorsFromProject: string;
};

/** @internal */
export const GetConnectorsFromProjectRequest$outboundSchema: z.ZodType<
    GetConnectorsFromProjectRequest$Outbound,
    z.ZodTypeDef,
    GetConnectorsFromProjectRequest
> = z.object({
    projectId: z.string(),
    getConnectorsFromProject: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConnectorsFromProjectRequest$ {
    /** @deprecated use `GetConnectorsFromProjectRequest$inboundSchema` instead. */
    export const inboundSchema = GetConnectorsFromProjectRequest$inboundSchema;
    /** @deprecated use `GetConnectorsFromProjectRequest$outboundSchema` instead. */
    export const outboundSchema = GetConnectorsFromProjectRequest$outboundSchema;
    /** @deprecated use `GetConnectorsFromProjectRequest$Outbound` instead. */
    export type Outbound = GetConnectorsFromProjectRequest$Outbound;
}
