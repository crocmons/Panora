/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddItemRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Accounting software.
     */
    remoteData?: boolean | undefined;
    unifiedItemInput: components.UnifiedItemInput;
};

export type AddItemResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedItemOutput | undefined;
};

export type AddItemResponse = components.UnifiedItemOutput | AddItemResponseBody;

/** @internal */
export const AddItemRequest$inboundSchema: z.ZodType<AddItemRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedItemInput: components.UnifiedItemInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedItemInput: "unifiedItemInput",
        });
    });

/** @internal */
export type AddItemRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedItemInput: components.UnifiedItemInput$Outbound;
};

/** @internal */
export const AddItemRequest$outboundSchema: z.ZodType<
    AddItemRequest$Outbound,
    z.ZodTypeDef,
    AddItemRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedItemInput: components.UnifiedItemInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedItemInput: "UnifiedItemInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddItemRequest$ {
    /** @deprecated use `AddItemRequest$inboundSchema` instead. */
    export const inboundSchema = AddItemRequest$inboundSchema;
    /** @deprecated use `AddItemRequest$outboundSchema` instead. */
    export const outboundSchema = AddItemRequest$outboundSchema;
    /** @deprecated use `AddItemRequest$Outbound` instead. */
    export type Outbound = AddItemRequest$Outbound;
}

/** @internal */
export const AddItemResponseBody$inboundSchema: z.ZodType<
    AddItemResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedItemOutput$inboundSchema.optional(),
});

/** @internal */
export type AddItemResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedItemOutput$Outbound | undefined;
};

/** @internal */
export const AddItemResponseBody$outboundSchema: z.ZodType<
    AddItemResponseBody$Outbound,
    z.ZodTypeDef,
    AddItemResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedItemOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddItemResponseBody$ {
    /** @deprecated use `AddItemResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddItemResponseBody$inboundSchema;
    /** @deprecated use `AddItemResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddItemResponseBody$outboundSchema;
    /** @deprecated use `AddItemResponseBody$Outbound` instead. */
    export type Outbound = AddItemResponseBody$Outbound;
}

/** @internal */
export const AddItemResponse$inboundSchema: z.ZodType<AddItemResponse, z.ZodTypeDef, unknown> =
    z.union([
        components.UnifiedItemOutput$inboundSchema,
        z.lazy(() => AddItemResponseBody$inboundSchema),
    ]);

/** @internal */
export type AddItemResponse$Outbound =
    | components.UnifiedItemOutput$Outbound
    | AddItemResponseBody$Outbound;

/** @internal */
export const AddItemResponse$outboundSchema: z.ZodType<
    AddItemResponse$Outbound,
    z.ZodTypeDef,
    AddItemResponse
> = z.union([
    components.UnifiedItemOutput$outboundSchema,
    z.lazy(() => AddItemResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddItemResponse$ {
    /** @deprecated use `AddItemResponse$inboundSchema` instead. */
    export const inboundSchema = AddItemResponse$inboundSchema;
    /** @deprecated use `AddItemResponse$outboundSchema` instead. */
    export const outboundSchema = AddItemResponse$outboundSchema;
    /** @deprecated use `AddItemResponse$Outbound` instead. */
    export type Outbound = AddItemResponse$Outbound;
}
