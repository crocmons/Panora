/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddAtsAttachmentRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedAttachmentInput: components.UnifiedAttachmentInput;
};

export type AddAtsAttachmentResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedAttachmentOutput | undefined;
};

export type AddAtsAttachmentResponse =
    | AddAtsAttachmentResponseBody
    | components.UnifiedAttachmentOutput;

/** @internal */
export const AddAtsAttachmentRequest$inboundSchema: z.ZodType<
    AddAtsAttachmentRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedAttachmentInput: components.UnifiedAttachmentInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedAttachmentInput: "unifiedAttachmentInput",
        });
    });

/** @internal */
export type AddAtsAttachmentRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedAttachmentInput: components.UnifiedAttachmentInput$Outbound;
};

/** @internal */
export const AddAtsAttachmentRequest$outboundSchema: z.ZodType<
    AddAtsAttachmentRequest$Outbound,
    z.ZodTypeDef,
    AddAtsAttachmentRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedAttachmentInput: components.UnifiedAttachmentInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedAttachmentInput: "UnifiedAttachmentInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAtsAttachmentRequest$ {
    /** @deprecated use `AddAtsAttachmentRequest$inboundSchema` instead. */
    export const inboundSchema = AddAtsAttachmentRequest$inboundSchema;
    /** @deprecated use `AddAtsAttachmentRequest$outboundSchema` instead. */
    export const outboundSchema = AddAtsAttachmentRequest$outboundSchema;
    /** @deprecated use `AddAtsAttachmentRequest$Outbound` instead. */
    export type Outbound = AddAtsAttachmentRequest$Outbound;
}

/** @internal */
export const AddAtsAttachmentResponseBody$inboundSchema: z.ZodType<
    AddAtsAttachmentResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedAttachmentOutput$inboundSchema.optional(),
});

/** @internal */
export type AddAtsAttachmentResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedAttachmentOutput$Outbound | undefined;
};

/** @internal */
export const AddAtsAttachmentResponseBody$outboundSchema: z.ZodType<
    AddAtsAttachmentResponseBody$Outbound,
    z.ZodTypeDef,
    AddAtsAttachmentResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedAttachmentOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAtsAttachmentResponseBody$ {
    /** @deprecated use `AddAtsAttachmentResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddAtsAttachmentResponseBody$inboundSchema;
    /** @deprecated use `AddAtsAttachmentResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddAtsAttachmentResponseBody$outboundSchema;
    /** @deprecated use `AddAtsAttachmentResponseBody$Outbound` instead. */
    export type Outbound = AddAtsAttachmentResponseBody$Outbound;
}

/** @internal */
export const AddAtsAttachmentResponse$inboundSchema: z.ZodType<
    AddAtsAttachmentResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => AddAtsAttachmentResponseBody$inboundSchema),
    components.UnifiedAttachmentOutput$inboundSchema,
]);

/** @internal */
export type AddAtsAttachmentResponse$Outbound =
    | AddAtsAttachmentResponseBody$Outbound
    | components.UnifiedAttachmentOutput$Outbound;

/** @internal */
export const AddAtsAttachmentResponse$outboundSchema: z.ZodType<
    AddAtsAttachmentResponse$Outbound,
    z.ZodTypeDef,
    AddAtsAttachmentResponse
> = z.union([
    z.lazy(() => AddAtsAttachmentResponseBody$outboundSchema),
    components.UnifiedAttachmentOutput$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAtsAttachmentResponse$ {
    /** @deprecated use `AddAtsAttachmentResponse$inboundSchema` instead. */
    export const inboundSchema = AddAtsAttachmentResponse$inboundSchema;
    /** @deprecated use `AddAtsAttachmentResponse$outboundSchema` instead. */
    export const outboundSchema = AddAtsAttachmentResponse$outboundSchema;
    /** @deprecated use `AddAtsAttachmentResponse$Outbound` instead. */
    export type Outbound = AddAtsAttachmentResponse$Outbound;
}
