/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddBankinfoRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
    unifiedBankInfoInput: components.UnifiedBankInfoInput;
};

export type AddBankinfoResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedBankInfoOutput | undefined;
};

export type AddBankinfoResponse = components.UnifiedBankInfoOutput | AddBankinfoResponseBody;

/** @internal */
export const AddBankinfoRequest$inboundSchema: z.ZodType<
    AddBankinfoRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedBankInfoInput: components.UnifiedBankInfoInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedBankInfoInput: "unifiedBankInfoInput",
        });
    });

/** @internal */
export type AddBankinfoRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedBankInfoInput: components.UnifiedBankInfoInput$Outbound;
};

/** @internal */
export const AddBankinfoRequest$outboundSchema: z.ZodType<
    AddBankinfoRequest$Outbound,
    z.ZodTypeDef,
    AddBankinfoRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedBankInfoInput: components.UnifiedBankInfoInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedBankInfoInput: "UnifiedBankInfoInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddBankinfoRequest$ {
    /** @deprecated use `AddBankinfoRequest$inboundSchema` instead. */
    export const inboundSchema = AddBankinfoRequest$inboundSchema;
    /** @deprecated use `AddBankinfoRequest$outboundSchema` instead. */
    export const outboundSchema = AddBankinfoRequest$outboundSchema;
    /** @deprecated use `AddBankinfoRequest$Outbound` instead. */
    export type Outbound = AddBankinfoRequest$Outbound;
}

/** @internal */
export const AddBankinfoResponseBody$inboundSchema: z.ZodType<
    AddBankinfoResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedBankInfoOutput$inboundSchema.optional(),
});

/** @internal */
export type AddBankinfoResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedBankInfoOutput$Outbound | undefined;
};

/** @internal */
export const AddBankinfoResponseBody$outboundSchema: z.ZodType<
    AddBankinfoResponseBody$Outbound,
    z.ZodTypeDef,
    AddBankinfoResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedBankInfoOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddBankinfoResponseBody$ {
    /** @deprecated use `AddBankinfoResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddBankinfoResponseBody$inboundSchema;
    /** @deprecated use `AddBankinfoResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddBankinfoResponseBody$outboundSchema;
    /** @deprecated use `AddBankinfoResponseBody$Outbound` instead. */
    export type Outbound = AddBankinfoResponseBody$Outbound;
}

/** @internal */
export const AddBankinfoResponse$inboundSchema: z.ZodType<
    AddBankinfoResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedBankInfoOutput$inboundSchema,
    z.lazy(() => AddBankinfoResponseBody$inboundSchema),
]);

/** @internal */
export type AddBankinfoResponse$Outbound =
    | components.UnifiedBankInfoOutput$Outbound
    | AddBankinfoResponseBody$Outbound;

/** @internal */
export const AddBankinfoResponse$outboundSchema: z.ZodType<
    AddBankinfoResponse$Outbound,
    z.ZodTypeDef,
    AddBankinfoResponse
> = z.union([
    components.UnifiedBankInfoOutput$outboundSchema,
    z.lazy(() => AddBankinfoResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddBankinfoResponse$ {
    /** @deprecated use `AddBankinfoResponse$inboundSchema` instead. */
    export const inboundSchema = AddBankinfoResponse$inboundSchema;
    /** @deprecated use `AddBankinfoResponse$outboundSchema` instead. */
    export const outboundSchema = AddBankinfoResponse$outboundSchema;
    /** @deprecated use `AddBankinfoResponse$Outbound` instead. */
    export type Outbound = AddBankinfoResponse$Outbound;
}
