/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddMessageRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
    unifiedMessageInput: components.UnifiedMessageInput;
};

export type AddMessageResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedMessageOutput | undefined;
};

export type AddMessageResponse = components.UnifiedMessageOutput | AddMessageResponseBody;

/** @internal */
export const AddMessageRequest$inboundSchema: z.ZodType<AddMessageRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
            UnifiedMessageInput: components.UnifiedMessageInput$inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
                UnifiedMessageInput: "unifiedMessageInput",
            });
        });

/** @internal */
export type AddMessageRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedMessageInput: components.UnifiedMessageInput$Outbound;
};

/** @internal */
export const AddMessageRequest$outboundSchema: z.ZodType<
    AddMessageRequest$Outbound,
    z.ZodTypeDef,
    AddMessageRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedMessageInput: components.UnifiedMessageInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedMessageInput: "UnifiedMessageInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddMessageRequest$ {
    /** @deprecated use `AddMessageRequest$inboundSchema` instead. */
    export const inboundSchema = AddMessageRequest$inboundSchema;
    /** @deprecated use `AddMessageRequest$outboundSchema` instead. */
    export const outboundSchema = AddMessageRequest$outboundSchema;
    /** @deprecated use `AddMessageRequest$Outbound` instead. */
    export type Outbound = AddMessageRequest$Outbound;
}

/** @internal */
export const AddMessageResponseBody$inboundSchema: z.ZodType<
    AddMessageResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedMessageOutput$inboundSchema.optional(),
});

/** @internal */
export type AddMessageResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedMessageOutput$Outbound | undefined;
};

/** @internal */
export const AddMessageResponseBody$outboundSchema: z.ZodType<
    AddMessageResponseBody$Outbound,
    z.ZodTypeDef,
    AddMessageResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedMessageOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddMessageResponseBody$ {
    /** @deprecated use `AddMessageResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddMessageResponseBody$inboundSchema;
    /** @deprecated use `AddMessageResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddMessageResponseBody$outboundSchema;
    /** @deprecated use `AddMessageResponseBody$Outbound` instead. */
    export type Outbound = AddMessageResponseBody$Outbound;
}

/** @internal */
export const AddMessageResponse$inboundSchema: z.ZodType<
    AddMessageResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedMessageOutput$inboundSchema,
    z.lazy(() => AddMessageResponseBody$inboundSchema),
]);

/** @internal */
export type AddMessageResponse$Outbound =
    | components.UnifiedMessageOutput$Outbound
    | AddMessageResponseBody$Outbound;

/** @internal */
export const AddMessageResponse$outboundSchema: z.ZodType<
    AddMessageResponse$Outbound,
    z.ZodTypeDef,
    AddMessageResponse
> = z.union([
    components.UnifiedMessageOutput$outboundSchema,
    z.lazy(() => AddMessageResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddMessageResponse$ {
    /** @deprecated use `AddMessageResponse$inboundSchema` instead. */
    export const inboundSchema = AddMessageResponse$inboundSchema;
    /** @deprecated use `AddMessageResponse$outboundSchema` instead. */
    export const outboundSchema = AddMessageResponse$outboundSchema;
    /** @deprecated use `AddMessageResponse$Outbound` instead. */
    export type Outbound = AddMessageResponse$Outbound;
}
