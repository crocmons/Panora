/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddPayGroupRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
    unifiedPayGroupInput: components.UnifiedPayGroupInput;
};

export type AddPayGroupResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedPayGroupOutput | undefined;
};

export type AddPayGroupResponse = components.UnifiedPayGroupOutput | AddPayGroupResponseBody;

/** @internal */
export const AddPayGroupRequest$inboundSchema: z.ZodType<
    AddPayGroupRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedPayGroupInput: components.UnifiedPayGroupInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedPayGroupInput: "unifiedPayGroupInput",
        });
    });

/** @internal */
export type AddPayGroupRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedPayGroupInput: components.UnifiedPayGroupInput$Outbound;
};

/** @internal */
export const AddPayGroupRequest$outboundSchema: z.ZodType<
    AddPayGroupRequest$Outbound,
    z.ZodTypeDef,
    AddPayGroupRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedPayGroupInput: components.UnifiedPayGroupInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedPayGroupInput: "UnifiedPayGroupInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPayGroupRequest$ {
    /** @deprecated use `AddPayGroupRequest$inboundSchema` instead. */
    export const inboundSchema = AddPayGroupRequest$inboundSchema;
    /** @deprecated use `AddPayGroupRequest$outboundSchema` instead. */
    export const outboundSchema = AddPayGroupRequest$outboundSchema;
    /** @deprecated use `AddPayGroupRequest$Outbound` instead. */
    export type Outbound = AddPayGroupRequest$Outbound;
}

/** @internal */
export const AddPayGroupResponseBody$inboundSchema: z.ZodType<
    AddPayGroupResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedPayGroupOutput$inboundSchema.optional(),
});

/** @internal */
export type AddPayGroupResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedPayGroupOutput$Outbound | undefined;
};

/** @internal */
export const AddPayGroupResponseBody$outboundSchema: z.ZodType<
    AddPayGroupResponseBody$Outbound,
    z.ZodTypeDef,
    AddPayGroupResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedPayGroupOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPayGroupResponseBody$ {
    /** @deprecated use `AddPayGroupResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddPayGroupResponseBody$inboundSchema;
    /** @deprecated use `AddPayGroupResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddPayGroupResponseBody$outboundSchema;
    /** @deprecated use `AddPayGroupResponseBody$Outbound` instead. */
    export type Outbound = AddPayGroupResponseBody$Outbound;
}

/** @internal */
export const AddPayGroupResponse$inboundSchema: z.ZodType<
    AddPayGroupResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedPayGroupOutput$inboundSchema,
    z.lazy(() => AddPayGroupResponseBody$inboundSchema),
]);

/** @internal */
export type AddPayGroupResponse$Outbound =
    | components.UnifiedPayGroupOutput$Outbound
    | AddPayGroupResponseBody$Outbound;

/** @internal */
export const AddPayGroupResponse$outboundSchema: z.ZodType<
    AddPayGroupResponse$Outbound,
    z.ZodTypeDef,
    AddPayGroupResponse
> = z.union([
    components.UnifiedPayGroupOutput$outboundSchema,
    z.lazy(() => AddPayGroupResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPayGroupResponse$ {
    /** @deprecated use `AddPayGroupResponse$inboundSchema` instead. */
    export const inboundSchema = AddPayGroupResponse$inboundSchema;
    /** @deprecated use `AddPayGroupResponse$outboundSchema` instead. */
    export const outboundSchema = AddPayGroupResponse$outboundSchema;
    /** @deprecated use `AddPayGroupResponse$Outbound` instead. */
    export type Outbound = AddPayGroupResponse$Outbound;
}
