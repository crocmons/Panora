/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetEmployerBenefitRequest = {
    /**
     * id of the employerbenefit you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
};

export type GetEmployerBenefitResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedEmployerBenefitOutput | undefined;
};

/** @internal */
export const GetEmployerBenefitRequest$inboundSchema: z.ZodType<
    GetEmployerBenefitRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remote_data: "remoteData",
        });
    });

/** @internal */
export type GetEmployerBenefitRequest$Outbound = {
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetEmployerBenefitRequest$outboundSchema: z.ZodType<
    GetEmployerBenefitRequest$Outbound,
    z.ZodTypeDef,
    GetEmployerBenefitRequest
> = z
    .object({
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEmployerBenefitRequest$ {
    /** @deprecated use `GetEmployerBenefitRequest$inboundSchema` instead. */
    export const inboundSchema = GetEmployerBenefitRequest$inboundSchema;
    /** @deprecated use `GetEmployerBenefitRequest$outboundSchema` instead. */
    export const outboundSchema = GetEmployerBenefitRequest$outboundSchema;
    /** @deprecated use `GetEmployerBenefitRequest$Outbound` instead. */
    export type Outbound = GetEmployerBenefitRequest$Outbound;
}

/** @internal */
export const GetEmployerBenefitResponseBody$inboundSchema: z.ZodType<
    GetEmployerBenefitResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedEmployerBenefitOutput$inboundSchema.optional(),
});

/** @internal */
export type GetEmployerBenefitResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedEmployerBenefitOutput$Outbound | undefined;
};

/** @internal */
export const GetEmployerBenefitResponseBody$outboundSchema: z.ZodType<
    GetEmployerBenefitResponseBody$Outbound,
    z.ZodTypeDef,
    GetEmployerBenefitResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedEmployerBenefitOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEmployerBenefitResponseBody$ {
    /** @deprecated use `GetEmployerBenefitResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetEmployerBenefitResponseBody$inboundSchema;
    /** @deprecated use `GetEmployerBenefitResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetEmployerBenefitResponseBody$outboundSchema;
    /** @deprecated use `GetEmployerBenefitResponseBody$Outbound` instead. */
    export type Outbound = GetEmployerBenefitResponseBody$Outbound;
}
