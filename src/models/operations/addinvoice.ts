/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddInvoiceRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Accounting software.
     */
    remoteData?: boolean | undefined;
    unifiedInvoiceInput: components.UnifiedInvoiceInput;
};

export type AddInvoiceResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedInvoiceOutput | undefined;
};

export type AddInvoiceResponse = components.UnifiedInvoiceOutput | AddInvoiceResponseBody;

/** @internal */
export const AddInvoiceRequest$inboundSchema: z.ZodType<AddInvoiceRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
            UnifiedInvoiceInput: components.UnifiedInvoiceInput$inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
                UnifiedInvoiceInput: "unifiedInvoiceInput",
            });
        });

/** @internal */
export type AddInvoiceRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedInvoiceInput: components.UnifiedInvoiceInput$Outbound;
};

/** @internal */
export const AddInvoiceRequest$outboundSchema: z.ZodType<
    AddInvoiceRequest$Outbound,
    z.ZodTypeDef,
    AddInvoiceRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedInvoiceInput: components.UnifiedInvoiceInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedInvoiceInput: "UnifiedInvoiceInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddInvoiceRequest$ {
    /** @deprecated use `AddInvoiceRequest$inboundSchema` instead. */
    export const inboundSchema = AddInvoiceRequest$inboundSchema;
    /** @deprecated use `AddInvoiceRequest$outboundSchema` instead. */
    export const outboundSchema = AddInvoiceRequest$outboundSchema;
    /** @deprecated use `AddInvoiceRequest$Outbound` instead. */
    export type Outbound = AddInvoiceRequest$Outbound;
}

/** @internal */
export const AddInvoiceResponseBody$inboundSchema: z.ZodType<
    AddInvoiceResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedInvoiceOutput$inboundSchema.optional(),
});

/** @internal */
export type AddInvoiceResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedInvoiceOutput$Outbound | undefined;
};

/** @internal */
export const AddInvoiceResponseBody$outboundSchema: z.ZodType<
    AddInvoiceResponseBody$Outbound,
    z.ZodTypeDef,
    AddInvoiceResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedInvoiceOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddInvoiceResponseBody$ {
    /** @deprecated use `AddInvoiceResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddInvoiceResponseBody$inboundSchema;
    /** @deprecated use `AddInvoiceResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddInvoiceResponseBody$outboundSchema;
    /** @deprecated use `AddInvoiceResponseBody$Outbound` instead. */
    export type Outbound = AddInvoiceResponseBody$Outbound;
}

/** @internal */
export const AddInvoiceResponse$inboundSchema: z.ZodType<
    AddInvoiceResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedInvoiceOutput$inboundSchema,
    z.lazy(() => AddInvoiceResponseBody$inboundSchema),
]);

/** @internal */
export type AddInvoiceResponse$Outbound =
    | components.UnifiedInvoiceOutput$Outbound
    | AddInvoiceResponseBody$Outbound;

/** @internal */
export const AddInvoiceResponse$outboundSchema: z.ZodType<
    AddInvoiceResponse$Outbound,
    z.ZodTypeDef,
    AddInvoiceResponse
> = z.union([
    components.UnifiedInvoiceOutput$outboundSchema,
    z.lazy(() => AddInvoiceResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddInvoiceResponse$ {
    /** @deprecated use `AddInvoiceResponse$inboundSchema` instead. */
    export const inboundSchema = AddInvoiceResponse$inboundSchema;
    /** @deprecated use `AddInvoiceResponse$outboundSchema` instead. */
    export const outboundSchema = AddInvoiceResponse$outboundSchema;
    /** @deprecated use `AddInvoiceResponse$Outbound` instead. */
    export type Outbound = AddInvoiceResponse$Outbound;
}
