/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddApplicationRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedApplicationInput: components.UnifiedApplicationInput;
};

export type AddApplicationResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedApplicationOutput | undefined;
};

export type AddApplicationResponse =
    | components.UnifiedApplicationOutput
    | AddApplicationResponseBody;

/** @internal */
export const AddApplicationRequest$inboundSchema: z.ZodType<
    AddApplicationRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedApplicationInput: components.UnifiedApplicationInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedApplicationInput: "unifiedApplicationInput",
        });
    });

/** @internal */
export type AddApplicationRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedApplicationInput: components.UnifiedApplicationInput$Outbound;
};

/** @internal */
export const AddApplicationRequest$outboundSchema: z.ZodType<
    AddApplicationRequest$Outbound,
    z.ZodTypeDef,
    AddApplicationRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedApplicationInput: components.UnifiedApplicationInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedApplicationInput: "UnifiedApplicationInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddApplicationRequest$ {
    /** @deprecated use `AddApplicationRequest$inboundSchema` instead. */
    export const inboundSchema = AddApplicationRequest$inboundSchema;
    /** @deprecated use `AddApplicationRequest$outboundSchema` instead. */
    export const outboundSchema = AddApplicationRequest$outboundSchema;
    /** @deprecated use `AddApplicationRequest$Outbound` instead. */
    export type Outbound = AddApplicationRequest$Outbound;
}

/** @internal */
export const AddApplicationResponseBody$inboundSchema: z.ZodType<
    AddApplicationResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedApplicationOutput$inboundSchema.optional(),
});

/** @internal */
export type AddApplicationResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedApplicationOutput$Outbound | undefined;
};

/** @internal */
export const AddApplicationResponseBody$outboundSchema: z.ZodType<
    AddApplicationResponseBody$Outbound,
    z.ZodTypeDef,
    AddApplicationResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedApplicationOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddApplicationResponseBody$ {
    /** @deprecated use `AddApplicationResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddApplicationResponseBody$inboundSchema;
    /** @deprecated use `AddApplicationResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddApplicationResponseBody$outboundSchema;
    /** @deprecated use `AddApplicationResponseBody$Outbound` instead. */
    export type Outbound = AddApplicationResponseBody$Outbound;
}

/** @internal */
export const AddApplicationResponse$inboundSchema: z.ZodType<
    AddApplicationResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedApplicationOutput$inboundSchema,
    z.lazy(() => AddApplicationResponseBody$inboundSchema),
]);

/** @internal */
export type AddApplicationResponse$Outbound =
    | components.UnifiedApplicationOutput$Outbound
    | AddApplicationResponseBody$Outbound;

/** @internal */
export const AddApplicationResponse$outboundSchema: z.ZodType<
    AddApplicationResponse$Outbound,
    z.ZodTypeDef,
    AddApplicationResponse
> = z.union([
    components.UnifiedApplicationOutput$outboundSchema,
    z.lazy(() => AddApplicationResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddApplicationResponse$ {
    /** @deprecated use `AddApplicationResponse$inboundSchema` instead. */
    export const inboundSchema = AddApplicationResponse$inboundSchema;
    /** @deprecated use `AddApplicationResponse$outboundSchema` instead. */
    export const outboundSchema = AddApplicationResponse$outboundSchema;
    /** @deprecated use `AddApplicationResponse$Outbound` instead. */
    export type Outbound = AddApplicationResponse$Outbound;
}
