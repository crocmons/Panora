/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type HandleOAuthCallbackRequest = {
    code: string;
    state: string;
};

/** @internal */
export const HandleOAuthCallbackRequest$inboundSchema: z.ZodType<
    HandleOAuthCallbackRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    code: z.string(),
    state: z.string(),
});

/** @internal */
export type HandleOAuthCallbackRequest$Outbound = {
    code: string;
    state: string;
};

/** @internal */
export const HandleOAuthCallbackRequest$outboundSchema: z.ZodType<
    HandleOAuthCallbackRequest$Outbound,
    z.ZodTypeDef,
    HandleOAuthCallbackRequest
> = z.object({
    code: z.string(),
    state: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HandleOAuthCallbackRequest$ {
    /** @deprecated use `HandleOAuthCallbackRequest$inboundSchema` instead. */
    export const inboundSchema = HandleOAuthCallbackRequest$inboundSchema;
    /** @deprecated use `HandleOAuthCallbackRequest$outboundSchema` instead. */
    export const outboundSchema = HandleOAuthCallbackRequest$outboundSchema;
    /** @deprecated use `HandleOAuthCallbackRequest$Outbound` instead. */
    export type Outbound = HandleOAuthCallbackRequest$Outbound;
}
