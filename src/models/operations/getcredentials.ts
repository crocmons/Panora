/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetCredentialsRequest = {
    projectId: string;
    type: string;
};

/** @internal */
export const GetCredentialsRequest$inboundSchema: z.ZodType<
    GetCredentialsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    projectId: z.string(),
    type: z.string(),
});

/** @internal */
export type GetCredentialsRequest$Outbound = {
    projectId: string;
    type: string;
};

/** @internal */
export const GetCredentialsRequest$outboundSchema: z.ZodType<
    GetCredentialsRequest$Outbound,
    z.ZodTypeDef,
    GetCredentialsRequest
> = z.object({
    projectId: z.string(),
    type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCredentialsRequest$ {
    /** @deprecated use `GetCredentialsRequest$inboundSchema` instead. */
    export const inboundSchema = GetCredentialsRequest$inboundSchema;
    /** @deprecated use `GetCredentialsRequest$outboundSchema` instead. */
    export const outboundSchema = GetCredentialsRequest$outboundSchema;
    /** @deprecated use `GetCredentialsRequest$Outbound` instead. */
    export type Outbound = GetCredentialsRequest$Outbound;
}
