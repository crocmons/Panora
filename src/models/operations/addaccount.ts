/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddAccountRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Accounting software.
     */
    remoteData?: boolean | undefined;
    unifiedAccountInput: components.UnifiedAccountInput;
};

export type AddAccountResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedAccountOutput | undefined;
};

export type AddAccountResponse = components.UnifiedAccountOutput | AddAccountResponseBody;

/** @internal */
export const AddAccountRequest$inboundSchema: z.ZodType<AddAccountRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
            UnifiedAccountInput: components.UnifiedAccountInput$inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
                UnifiedAccountInput: "unifiedAccountInput",
            });
        });

/** @internal */
export type AddAccountRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedAccountInput: components.UnifiedAccountInput$Outbound;
};

/** @internal */
export const AddAccountRequest$outboundSchema: z.ZodType<
    AddAccountRequest$Outbound,
    z.ZodTypeDef,
    AddAccountRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedAccountInput: components.UnifiedAccountInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedAccountInput: "UnifiedAccountInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAccountRequest$ {
    /** @deprecated use `AddAccountRequest$inboundSchema` instead. */
    export const inboundSchema = AddAccountRequest$inboundSchema;
    /** @deprecated use `AddAccountRequest$outboundSchema` instead. */
    export const outboundSchema = AddAccountRequest$outboundSchema;
    /** @deprecated use `AddAccountRequest$Outbound` instead. */
    export type Outbound = AddAccountRequest$Outbound;
}

/** @internal */
export const AddAccountResponseBody$inboundSchema: z.ZodType<
    AddAccountResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedAccountOutput$inboundSchema.optional(),
});

/** @internal */
export type AddAccountResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedAccountOutput$Outbound | undefined;
};

/** @internal */
export const AddAccountResponseBody$outboundSchema: z.ZodType<
    AddAccountResponseBody$Outbound,
    z.ZodTypeDef,
    AddAccountResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedAccountOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAccountResponseBody$ {
    /** @deprecated use `AddAccountResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddAccountResponseBody$inboundSchema;
    /** @deprecated use `AddAccountResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddAccountResponseBody$outboundSchema;
    /** @deprecated use `AddAccountResponseBody$Outbound` instead. */
    export type Outbound = AddAccountResponseBody$Outbound;
}

/** @internal */
export const AddAccountResponse$inboundSchema: z.ZodType<
    AddAccountResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedAccountOutput$inboundSchema,
    z.lazy(() => AddAccountResponseBody$inboundSchema),
]);

/** @internal */
export type AddAccountResponse$Outbound =
    | components.UnifiedAccountOutput$Outbound
    | AddAccountResponseBody$Outbound;

/** @internal */
export const AddAccountResponse$outboundSchema: z.ZodType<
    AddAccountResponse$Outbound,
    z.ZodTypeDef,
    AddAccountResponse
> = z.union([
    components.UnifiedAccountOutput$outboundSchema,
    z.lazy(() => AddAccountResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAccountResponse$ {
    /** @deprecated use `AddAccountResponse$inboundSchema` instead. */
    export const inboundSchema = AddAccountResponse$inboundSchema;
    /** @deprecated use `AddAccountResponse$outboundSchema` instead. */
    export const outboundSchema = AddAccountResponse$outboundSchema;
    /** @deprecated use `AddAccountResponse$Outbound` instead. */
    export type Outbound = AddAccountResponse$Outbound;
}
