/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetTrackingCategoryRequest = {
    /**
     * id of the trackingcategory you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Accounting software.
     */
    remoteData?: boolean | undefined;
};

export type GetTrackingCategoryResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTrackingCategoryOutput | undefined;
};

/** @internal */
export const GetTrackingCategoryRequest$inboundSchema: z.ZodType<
    GetTrackingCategoryRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remote_data: "remoteData",
        });
    });

/** @internal */
export type GetTrackingCategoryRequest$Outbound = {
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetTrackingCategoryRequest$outboundSchema: z.ZodType<
    GetTrackingCategoryRequest$Outbound,
    z.ZodTypeDef,
    GetTrackingCategoryRequest
> = z
    .object({
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTrackingCategoryRequest$ {
    /** @deprecated use `GetTrackingCategoryRequest$inboundSchema` instead. */
    export const inboundSchema = GetTrackingCategoryRequest$inboundSchema;
    /** @deprecated use `GetTrackingCategoryRequest$outboundSchema` instead. */
    export const outboundSchema = GetTrackingCategoryRequest$outboundSchema;
    /** @deprecated use `GetTrackingCategoryRequest$Outbound` instead. */
    export type Outbound = GetTrackingCategoryRequest$Outbound;
}

/** @internal */
export const GetTrackingCategoryResponseBody$inboundSchema: z.ZodType<
    GetTrackingCategoryResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTrackingCategoryOutput$inboundSchema.optional(),
});

/** @internal */
export type GetTrackingCategoryResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTrackingCategoryOutput$Outbound | undefined;
};

/** @internal */
export const GetTrackingCategoryResponseBody$outboundSchema: z.ZodType<
    GetTrackingCategoryResponseBody$Outbound,
    z.ZodTypeDef,
    GetTrackingCategoryResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTrackingCategoryOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTrackingCategoryResponseBody$ {
    /** @deprecated use `GetTrackingCategoryResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetTrackingCategoryResponseBody$inboundSchema;
    /** @deprecated use `GetTrackingCategoryResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetTrackingCategoryResponseBody$outboundSchema;
    /** @deprecated use `GetTrackingCategoryResponseBody$Outbound` instead. */
    export type Outbound = GetTrackingCategoryResponseBody$Outbound;
}
