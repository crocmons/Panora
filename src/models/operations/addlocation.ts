/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddLocationRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
    unifiedLocationInput: components.UnifiedLocationInput;
};

export type AddLocationResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedLocationOutput | undefined;
};

export type AddLocationResponse = components.UnifiedLocationOutput | AddLocationResponseBody;

/** @internal */
export const AddLocationRequest$inboundSchema: z.ZodType<
    AddLocationRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedLocationInput: components.UnifiedLocationInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedLocationInput: "unifiedLocationInput",
        });
    });

/** @internal */
export type AddLocationRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedLocationInput: components.UnifiedLocationInput$Outbound;
};

/** @internal */
export const AddLocationRequest$outboundSchema: z.ZodType<
    AddLocationRequest$Outbound,
    z.ZodTypeDef,
    AddLocationRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedLocationInput: components.UnifiedLocationInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedLocationInput: "UnifiedLocationInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddLocationRequest$ {
    /** @deprecated use `AddLocationRequest$inboundSchema` instead. */
    export const inboundSchema = AddLocationRequest$inboundSchema;
    /** @deprecated use `AddLocationRequest$outboundSchema` instead. */
    export const outboundSchema = AddLocationRequest$outboundSchema;
    /** @deprecated use `AddLocationRequest$Outbound` instead. */
    export type Outbound = AddLocationRequest$Outbound;
}

/** @internal */
export const AddLocationResponseBody$inboundSchema: z.ZodType<
    AddLocationResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedLocationOutput$inboundSchema.optional(),
});

/** @internal */
export type AddLocationResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedLocationOutput$Outbound | undefined;
};

/** @internal */
export const AddLocationResponseBody$outboundSchema: z.ZodType<
    AddLocationResponseBody$Outbound,
    z.ZodTypeDef,
    AddLocationResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedLocationOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddLocationResponseBody$ {
    /** @deprecated use `AddLocationResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddLocationResponseBody$inboundSchema;
    /** @deprecated use `AddLocationResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddLocationResponseBody$outboundSchema;
    /** @deprecated use `AddLocationResponseBody$Outbound` instead. */
    export type Outbound = AddLocationResponseBody$Outbound;
}

/** @internal */
export const AddLocationResponse$inboundSchema: z.ZodType<
    AddLocationResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedLocationOutput$inboundSchema,
    z.lazy(() => AddLocationResponseBody$inboundSchema),
]);

/** @internal */
export type AddLocationResponse$Outbound =
    | components.UnifiedLocationOutput$Outbound
    | AddLocationResponseBody$Outbound;

/** @internal */
export const AddLocationResponse$outboundSchema: z.ZodType<
    AddLocationResponse$Outbound,
    z.ZodTypeDef,
    AddLocationResponse
> = z.union([
    components.UnifiedLocationOutput$outboundSchema,
    z.lazy(() => AddLocationResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddLocationResponse$ {
    /** @deprecated use `AddLocationResponse$inboundSchema` instead. */
    export const inboundSchema = AddLocationResponse$inboundSchema;
    /** @deprecated use `AddLocationResponse$outboundSchema` instead. */
    export const outboundSchema = AddLocationResponse$outboundSchema;
    /** @deprecated use `AddLocationResponse$Outbound` instead. */
    export type Outbound = AddLocationResponse$Outbound;
}
