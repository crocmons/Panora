/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddCrmContactRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original CRM software.
     */
    remoteData?: boolean | undefined;
    unifiedContactInput: components.UnifiedContactInput;
};

export type AddCrmContactResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedContactOutput | undefined;
};

export type AddCrmContactResponse = components.UnifiedContactOutput | AddCrmContactResponseBody;

/** @internal */
export const AddCrmContactRequest$inboundSchema: z.ZodType<
    AddCrmContactRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedContactInput: components.UnifiedContactInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedContactInput: "unifiedContactInput",
        });
    });

/** @internal */
export type AddCrmContactRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedContactInput: components.UnifiedContactInput$Outbound;
};

/** @internal */
export const AddCrmContactRequest$outboundSchema: z.ZodType<
    AddCrmContactRequest$Outbound,
    z.ZodTypeDef,
    AddCrmContactRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedContactInput: components.UnifiedContactInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedContactInput: "UnifiedContactInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddCrmContactRequest$ {
    /** @deprecated use `AddCrmContactRequest$inboundSchema` instead. */
    export const inboundSchema = AddCrmContactRequest$inboundSchema;
    /** @deprecated use `AddCrmContactRequest$outboundSchema` instead. */
    export const outboundSchema = AddCrmContactRequest$outboundSchema;
    /** @deprecated use `AddCrmContactRequest$Outbound` instead. */
    export type Outbound = AddCrmContactRequest$Outbound;
}

/** @internal */
export const AddCrmContactResponseBody$inboundSchema: z.ZodType<
    AddCrmContactResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedContactOutput$inboundSchema.optional(),
});

/** @internal */
export type AddCrmContactResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedContactOutput$Outbound | undefined;
};

/** @internal */
export const AddCrmContactResponseBody$outboundSchema: z.ZodType<
    AddCrmContactResponseBody$Outbound,
    z.ZodTypeDef,
    AddCrmContactResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedContactOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddCrmContactResponseBody$ {
    /** @deprecated use `AddCrmContactResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddCrmContactResponseBody$inboundSchema;
    /** @deprecated use `AddCrmContactResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddCrmContactResponseBody$outboundSchema;
    /** @deprecated use `AddCrmContactResponseBody$Outbound` instead. */
    export type Outbound = AddCrmContactResponseBody$Outbound;
}

/** @internal */
export const AddCrmContactResponse$inboundSchema: z.ZodType<
    AddCrmContactResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedContactOutput$inboundSchema,
    z.lazy(() => AddCrmContactResponseBody$inboundSchema),
]);

/** @internal */
export type AddCrmContactResponse$Outbound =
    | components.UnifiedContactOutput$Outbound
    | AddCrmContactResponseBody$Outbound;

/** @internal */
export const AddCrmContactResponse$outboundSchema: z.ZodType<
    AddCrmContactResponse$Outbound,
    z.ZodTypeDef,
    AddCrmContactResponse
> = z.union([
    components.UnifiedContactOutput$outboundSchema,
    z.lazy(() => AddCrmContactResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddCrmContactResponse$ {
    /** @deprecated use `AddCrmContactResponse$inboundSchema` instead. */
    export const inboundSchema = AddCrmContactResponse$inboundSchema;
    /** @deprecated use `AddCrmContactResponse$outboundSchema` instead. */
    export const outboundSchema = AddCrmContactResponse$outboundSchema;
    /** @deprecated use `AddCrmContactResponse$Outbound` instead. */
    export type Outbound = AddCrmContactResponse$Outbound;
}
