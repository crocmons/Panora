/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetApplicationRequest = {
    /**
     * id of the application you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
};

export type GetApplicationResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedApplicationOutput | undefined;
};

/** @internal */
export const GetApplicationRequest$inboundSchema: z.ZodType<
    GetApplicationRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remote_data: "remoteData",
        });
    });

/** @internal */
export type GetApplicationRequest$Outbound = {
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetApplicationRequest$outboundSchema: z.ZodType<
    GetApplicationRequest$Outbound,
    z.ZodTypeDef,
    GetApplicationRequest
> = z
    .object({
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApplicationRequest$ {
    /** @deprecated use `GetApplicationRequest$inboundSchema` instead. */
    export const inboundSchema = GetApplicationRequest$inboundSchema;
    /** @deprecated use `GetApplicationRequest$outboundSchema` instead. */
    export const outboundSchema = GetApplicationRequest$outboundSchema;
    /** @deprecated use `GetApplicationRequest$Outbound` instead. */
    export type Outbound = GetApplicationRequest$Outbound;
}

/** @internal */
export const GetApplicationResponseBody$inboundSchema: z.ZodType<
    GetApplicationResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedApplicationOutput$inboundSchema.optional(),
});

/** @internal */
export type GetApplicationResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedApplicationOutput$Outbound | undefined;
};

/** @internal */
export const GetApplicationResponseBody$outboundSchema: z.ZodType<
    GetApplicationResponseBody$Outbound,
    z.ZodTypeDef,
    GetApplicationResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedApplicationOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApplicationResponseBody$ {
    /** @deprecated use `GetApplicationResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetApplicationResponseBody$inboundSchema;
    /** @deprecated use `GetApplicationResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetApplicationResponseBody$outboundSchema;
    /** @deprecated use `GetApplicationResponseBody$Outbound` instead. */
    export type Outbound = GetApplicationResponseBody$Outbound;
}
