/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddTaskRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Crm software.
     */
    remoteData?: boolean | undefined;
    unifiedTaskInput: components.UnifiedTaskInput;
};

export type AddTaskResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTaskOutput | undefined;
};

export type AddTaskResponse = AddTaskResponseBody | components.UnifiedTaskOutput;

/** @internal */
export const AddTaskRequest$inboundSchema: z.ZodType<AddTaskRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedTaskInput: components.UnifiedTaskInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedTaskInput: "unifiedTaskInput",
        });
    });

/** @internal */
export type AddTaskRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedTaskInput: components.UnifiedTaskInput$Outbound;
};

/** @internal */
export const AddTaskRequest$outboundSchema: z.ZodType<
    AddTaskRequest$Outbound,
    z.ZodTypeDef,
    AddTaskRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedTaskInput: components.UnifiedTaskInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedTaskInput: "UnifiedTaskInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTaskRequest$ {
    /** @deprecated use `AddTaskRequest$inboundSchema` instead. */
    export const inboundSchema = AddTaskRequest$inboundSchema;
    /** @deprecated use `AddTaskRequest$outboundSchema` instead. */
    export const outboundSchema = AddTaskRequest$outboundSchema;
    /** @deprecated use `AddTaskRequest$Outbound` instead. */
    export type Outbound = AddTaskRequest$Outbound;
}

/** @internal */
export const AddTaskResponseBody$inboundSchema: z.ZodType<
    AddTaskResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTaskOutput$inboundSchema.optional(),
});

/** @internal */
export type AddTaskResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTaskOutput$Outbound | undefined;
};

/** @internal */
export const AddTaskResponseBody$outboundSchema: z.ZodType<
    AddTaskResponseBody$Outbound,
    z.ZodTypeDef,
    AddTaskResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTaskOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTaskResponseBody$ {
    /** @deprecated use `AddTaskResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddTaskResponseBody$inboundSchema;
    /** @deprecated use `AddTaskResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddTaskResponseBody$outboundSchema;
    /** @deprecated use `AddTaskResponseBody$Outbound` instead. */
    export type Outbound = AddTaskResponseBody$Outbound;
}

/** @internal */
export const AddTaskResponse$inboundSchema: z.ZodType<AddTaskResponse, z.ZodTypeDef, unknown> =
    z.union([
        z.lazy(() => AddTaskResponseBody$inboundSchema),
        components.UnifiedTaskOutput$inboundSchema,
    ]);

/** @internal */
export type AddTaskResponse$Outbound =
    | AddTaskResponseBody$Outbound
    | components.UnifiedTaskOutput$Outbound;

/** @internal */
export const AddTaskResponse$outboundSchema: z.ZodType<
    AddTaskResponse$Outbound,
    z.ZodTypeDef,
    AddTaskResponse
> = z.union([
    z.lazy(() => AddTaskResponseBody$outboundSchema),
    components.UnifiedTaskOutput$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTaskResponse$ {
    /** @deprecated use `AddTaskResponse$inboundSchema` instead. */
    export const inboundSchema = AddTaskResponse$inboundSchema;
    /** @deprecated use `AddTaskResponse$outboundSchema` instead. */
    export const outboundSchema = AddTaskResponse$outboundSchema;
    /** @deprecated use `AddTaskResponse$Outbound` instead. */
    export type Outbound = AddTaskResponse$Outbound;
}
