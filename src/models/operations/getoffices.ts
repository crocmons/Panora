/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetOfficesRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
};

export type GetOfficesResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedOfficeOutput | undefined;
};

/** @internal */
export const GetOfficesRequest$inboundSchema: z.ZodType<GetOfficesRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
            });
        });

/** @internal */
export type GetOfficesRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetOfficesRequest$outboundSchema: z.ZodType<
    GetOfficesRequest$Outbound,
    z.ZodTypeDef,
    GetOfficesRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOfficesRequest$ {
    /** @deprecated use `GetOfficesRequest$inboundSchema` instead. */
    export const inboundSchema = GetOfficesRequest$inboundSchema;
    /** @deprecated use `GetOfficesRequest$outboundSchema` instead. */
    export const outboundSchema = GetOfficesRequest$outboundSchema;
    /** @deprecated use `GetOfficesRequest$Outbound` instead. */
    export type Outbound = GetOfficesRequest$Outbound;
}

/** @internal */
export const GetOfficesResponseBody$inboundSchema: z.ZodType<
    GetOfficesResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedOfficeOutput$inboundSchema.optional(),
});

/** @internal */
export type GetOfficesResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedOfficeOutput$Outbound | undefined;
};

/** @internal */
export const GetOfficesResponseBody$outboundSchema: z.ZodType<
    GetOfficesResponseBody$Outbound,
    z.ZodTypeDef,
    GetOfficesResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedOfficeOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOfficesResponseBody$ {
    /** @deprecated use `GetOfficesResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetOfficesResponseBody$inboundSchema;
    /** @deprecated use `GetOfficesResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetOfficesResponseBody$outboundSchema;
    /** @deprecated use `GetOfficesResponseBody$Outbound` instead. */
    export type Outbound = GetOfficesResponseBody$Outbound;
}
