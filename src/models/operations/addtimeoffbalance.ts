/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddTimeoffBalanceRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
    unifiedTimeoffBalanceInput: components.UnifiedTimeoffBalanceInput;
};

export type AddTimeoffBalanceResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTimeoffBalanceOutput | undefined;
};

export type AddTimeoffBalanceResponse =
    | components.UnifiedTimeoffBalanceOutput
    | AddTimeoffBalanceResponseBody;

/** @internal */
export const AddTimeoffBalanceRequest$inboundSchema: z.ZodType<
    AddTimeoffBalanceRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedTimeoffBalanceInput: components.UnifiedTimeoffBalanceInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedTimeoffBalanceInput: "unifiedTimeoffBalanceInput",
        });
    });

/** @internal */
export type AddTimeoffBalanceRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedTimeoffBalanceInput: components.UnifiedTimeoffBalanceInput$Outbound;
};

/** @internal */
export const AddTimeoffBalanceRequest$outboundSchema: z.ZodType<
    AddTimeoffBalanceRequest$Outbound,
    z.ZodTypeDef,
    AddTimeoffBalanceRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedTimeoffBalanceInput: components.UnifiedTimeoffBalanceInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedTimeoffBalanceInput: "UnifiedTimeoffBalanceInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTimeoffBalanceRequest$ {
    /** @deprecated use `AddTimeoffBalanceRequest$inboundSchema` instead. */
    export const inboundSchema = AddTimeoffBalanceRequest$inboundSchema;
    /** @deprecated use `AddTimeoffBalanceRequest$outboundSchema` instead. */
    export const outboundSchema = AddTimeoffBalanceRequest$outboundSchema;
    /** @deprecated use `AddTimeoffBalanceRequest$Outbound` instead. */
    export type Outbound = AddTimeoffBalanceRequest$Outbound;
}

/** @internal */
export const AddTimeoffBalanceResponseBody$inboundSchema: z.ZodType<
    AddTimeoffBalanceResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTimeoffBalanceOutput$inboundSchema.optional(),
});

/** @internal */
export type AddTimeoffBalanceResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTimeoffBalanceOutput$Outbound | undefined;
};

/** @internal */
export const AddTimeoffBalanceResponseBody$outboundSchema: z.ZodType<
    AddTimeoffBalanceResponseBody$Outbound,
    z.ZodTypeDef,
    AddTimeoffBalanceResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTimeoffBalanceOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTimeoffBalanceResponseBody$ {
    /** @deprecated use `AddTimeoffBalanceResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddTimeoffBalanceResponseBody$inboundSchema;
    /** @deprecated use `AddTimeoffBalanceResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddTimeoffBalanceResponseBody$outboundSchema;
    /** @deprecated use `AddTimeoffBalanceResponseBody$Outbound` instead. */
    export type Outbound = AddTimeoffBalanceResponseBody$Outbound;
}

/** @internal */
export const AddTimeoffBalanceResponse$inboundSchema: z.ZodType<
    AddTimeoffBalanceResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedTimeoffBalanceOutput$inboundSchema,
    z.lazy(() => AddTimeoffBalanceResponseBody$inboundSchema),
]);

/** @internal */
export type AddTimeoffBalanceResponse$Outbound =
    | components.UnifiedTimeoffBalanceOutput$Outbound
    | AddTimeoffBalanceResponseBody$Outbound;

/** @internal */
export const AddTimeoffBalanceResponse$outboundSchema: z.ZodType<
    AddTimeoffBalanceResponse$Outbound,
    z.ZodTypeDef,
    AddTimeoffBalanceResponse
> = z.union([
    components.UnifiedTimeoffBalanceOutput$outboundSchema,
    z.lazy(() => AddTimeoffBalanceResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTimeoffBalanceResponse$ {
    /** @deprecated use `AddTimeoffBalanceResponse$inboundSchema` instead. */
    export const inboundSchema = AddTimeoffBalanceResponse$inboundSchema;
    /** @deprecated use `AddTimeoffBalanceResponse$outboundSchema` instead. */
    export const outboundSchema = AddTimeoffBalanceResponse$outboundSchema;
    /** @deprecated use `AddTimeoffBalanceResponse$Outbound` instead. */
    export type Outbound = AddTimeoffBalanceResponse$Outbound;
}
