/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddListRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
    unifiedListInput: components.UnifiedListInput;
};

export type AddListResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedListOutput | undefined;
};

export type AddListResponse = components.UnifiedListOutput | AddListResponseBody;

/** @internal */
export const AddListRequest$inboundSchema: z.ZodType<AddListRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedListInput: components.UnifiedListInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedListInput: "unifiedListInput",
        });
    });

/** @internal */
export type AddListRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedListInput: components.UnifiedListInput$Outbound;
};

/** @internal */
export const AddListRequest$outboundSchema: z.ZodType<
    AddListRequest$Outbound,
    z.ZodTypeDef,
    AddListRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedListInput: components.UnifiedListInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedListInput: "UnifiedListInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddListRequest$ {
    /** @deprecated use `AddListRequest$inboundSchema` instead. */
    export const inboundSchema = AddListRequest$inboundSchema;
    /** @deprecated use `AddListRequest$outboundSchema` instead. */
    export const outboundSchema = AddListRequest$outboundSchema;
    /** @deprecated use `AddListRequest$Outbound` instead. */
    export type Outbound = AddListRequest$Outbound;
}

/** @internal */
export const AddListResponseBody$inboundSchema: z.ZodType<
    AddListResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedListOutput$inboundSchema.optional(),
});

/** @internal */
export type AddListResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedListOutput$Outbound | undefined;
};

/** @internal */
export const AddListResponseBody$outboundSchema: z.ZodType<
    AddListResponseBody$Outbound,
    z.ZodTypeDef,
    AddListResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedListOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddListResponseBody$ {
    /** @deprecated use `AddListResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddListResponseBody$inboundSchema;
    /** @deprecated use `AddListResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddListResponseBody$outboundSchema;
    /** @deprecated use `AddListResponseBody$Outbound` instead. */
    export type Outbound = AddListResponseBody$Outbound;
}

/** @internal */
export const AddListResponse$inboundSchema: z.ZodType<AddListResponse, z.ZodTypeDef, unknown> =
    z.union([
        components.UnifiedListOutput$inboundSchema,
        z.lazy(() => AddListResponseBody$inboundSchema),
    ]);

/** @internal */
export type AddListResponse$Outbound =
    | components.UnifiedListOutput$Outbound
    | AddListResponseBody$Outbound;

/** @internal */
export const AddListResponse$outboundSchema: z.ZodType<
    AddListResponse$Outbound,
    z.ZodTypeDef,
    AddListResponse
> = z.union([
    components.UnifiedListOutput$outboundSchema,
    z.lazy(() => AddListResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddListResponse$ {
    /** @deprecated use `AddListResponse$inboundSchema` instead. */
    export const inboundSchema = AddListResponse$inboundSchema;
    /** @deprecated use `AddListResponse$outboundSchema` instead. */
    export const outboundSchema = AddListResponse$outboundSchema;
    /** @deprecated use `AddListResponse$Outbound` instead. */
    export type Outbound = AddListResponse$Outbound;
}
