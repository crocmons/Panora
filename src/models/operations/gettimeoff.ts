/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetTimeoffRequest = {
    /**
     * id of the timeoff you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
};

export type GetTimeoffResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTimeoffOutput | undefined;
};

/** @internal */
export const GetTimeoffRequest$inboundSchema: z.ZodType<GetTimeoffRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            id: z.string(),
            remote_data: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                remote_data: "remoteData",
            });
        });

/** @internal */
export type GetTimeoffRequest$Outbound = {
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetTimeoffRequest$outboundSchema: z.ZodType<
    GetTimeoffRequest$Outbound,
    z.ZodTypeDef,
    GetTimeoffRequest
> = z
    .object({
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTimeoffRequest$ {
    /** @deprecated use `GetTimeoffRequest$inboundSchema` instead. */
    export const inboundSchema = GetTimeoffRequest$inboundSchema;
    /** @deprecated use `GetTimeoffRequest$outboundSchema` instead. */
    export const outboundSchema = GetTimeoffRequest$outboundSchema;
    /** @deprecated use `GetTimeoffRequest$Outbound` instead. */
    export type Outbound = GetTimeoffRequest$Outbound;
}

/** @internal */
export const GetTimeoffResponseBody$inboundSchema: z.ZodType<
    GetTimeoffResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTimeoffOutput$inboundSchema.optional(),
});

/** @internal */
export type GetTimeoffResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTimeoffOutput$Outbound | undefined;
};

/** @internal */
export const GetTimeoffResponseBody$outboundSchema: z.ZodType<
    GetTimeoffResponseBody$Outbound,
    z.ZodTypeDef,
    GetTimeoffResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTimeoffOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTimeoffResponseBody$ {
    /** @deprecated use `GetTimeoffResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetTimeoffResponseBody$inboundSchema;
    /** @deprecated use `GetTimeoffResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetTimeoffResponseBody$outboundSchema;
    /** @deprecated use `GetTimeoffResponseBody$Outbound` instead. */
    export type Outbound = GetTimeoffResponseBody$Outbound;
}
