/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddVendorCreditRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Accounting software.
     */
    remoteData?: boolean | undefined;
    unifiedVendorCreditInput: components.UnifiedVendorCreditInput;
};

export type AddVendorCreditResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedVendorCreditOutput | undefined;
};

export type AddVendorCreditResponse =
    | components.UnifiedVendorCreditOutput
    | AddVendorCreditResponseBody;

/** @internal */
export const AddVendorCreditRequest$inboundSchema: z.ZodType<
    AddVendorCreditRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedVendorCreditInput: components.UnifiedVendorCreditInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedVendorCreditInput: "unifiedVendorCreditInput",
        });
    });

/** @internal */
export type AddVendorCreditRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedVendorCreditInput: components.UnifiedVendorCreditInput$Outbound;
};

/** @internal */
export const AddVendorCreditRequest$outboundSchema: z.ZodType<
    AddVendorCreditRequest$Outbound,
    z.ZodTypeDef,
    AddVendorCreditRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedVendorCreditInput: components.UnifiedVendorCreditInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedVendorCreditInput: "UnifiedVendorCreditInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddVendorCreditRequest$ {
    /** @deprecated use `AddVendorCreditRequest$inboundSchema` instead. */
    export const inboundSchema = AddVendorCreditRequest$inboundSchema;
    /** @deprecated use `AddVendorCreditRequest$outboundSchema` instead. */
    export const outboundSchema = AddVendorCreditRequest$outboundSchema;
    /** @deprecated use `AddVendorCreditRequest$Outbound` instead. */
    export type Outbound = AddVendorCreditRequest$Outbound;
}

/** @internal */
export const AddVendorCreditResponseBody$inboundSchema: z.ZodType<
    AddVendorCreditResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedVendorCreditOutput$inboundSchema.optional(),
});

/** @internal */
export type AddVendorCreditResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedVendorCreditOutput$Outbound | undefined;
};

/** @internal */
export const AddVendorCreditResponseBody$outboundSchema: z.ZodType<
    AddVendorCreditResponseBody$Outbound,
    z.ZodTypeDef,
    AddVendorCreditResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedVendorCreditOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddVendorCreditResponseBody$ {
    /** @deprecated use `AddVendorCreditResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddVendorCreditResponseBody$inboundSchema;
    /** @deprecated use `AddVendorCreditResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddVendorCreditResponseBody$outboundSchema;
    /** @deprecated use `AddVendorCreditResponseBody$Outbound` instead. */
    export type Outbound = AddVendorCreditResponseBody$Outbound;
}

/** @internal */
export const AddVendorCreditResponse$inboundSchema: z.ZodType<
    AddVendorCreditResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedVendorCreditOutput$inboundSchema,
    z.lazy(() => AddVendorCreditResponseBody$inboundSchema),
]);

/** @internal */
export type AddVendorCreditResponse$Outbound =
    | components.UnifiedVendorCreditOutput$Outbound
    | AddVendorCreditResponseBody$Outbound;

/** @internal */
export const AddVendorCreditResponse$outboundSchema: z.ZodType<
    AddVendorCreditResponse$Outbound,
    z.ZodTypeDef,
    AddVendorCreditResponse
> = z.union([
    components.UnifiedVendorCreditOutput$outboundSchema,
    z.lazy(() => AddVendorCreditResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddVendorCreditResponse$ {
    /** @deprecated use `AddVendorCreditResponse$inboundSchema` instead. */
    export const inboundSchema = AddVendorCreditResponse$inboundSchema;
    /** @deprecated use `AddVendorCreditResponse$outboundSchema` instead. */
    export const outboundSchema = AddVendorCreditResponse$outboundSchema;
    /** @deprecated use `AddVendorCreditResponse$Outbound` instead. */
    export type Outbound = AddVendorCreditResponse$Outbound;
}
