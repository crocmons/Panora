/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetActionsRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
};

export type GetActionsResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedActionOutput | undefined;
};

/** @internal */
export const GetActionsRequest$inboundSchema: z.ZodType<GetActionsRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
            });
        });

/** @internal */
export type GetActionsRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetActionsRequest$outboundSchema: z.ZodType<
    GetActionsRequest$Outbound,
    z.ZodTypeDef,
    GetActionsRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetActionsRequest$ {
    /** @deprecated use `GetActionsRequest$inboundSchema` instead. */
    export const inboundSchema = GetActionsRequest$inboundSchema;
    /** @deprecated use `GetActionsRequest$outboundSchema` instead. */
    export const outboundSchema = GetActionsRequest$outboundSchema;
    /** @deprecated use `GetActionsRequest$Outbound` instead. */
    export type Outbound = GetActionsRequest$Outbound;
}

/** @internal */
export const GetActionsResponseBody$inboundSchema: z.ZodType<
    GetActionsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedActionOutput$inboundSchema.optional(),
});

/** @internal */
export type GetActionsResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedActionOutput$Outbound | undefined;
};

/** @internal */
export const GetActionsResponseBody$outboundSchema: z.ZodType<
    GetActionsResponseBody$Outbound,
    z.ZodTypeDef,
    GetActionsResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedActionOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetActionsResponseBody$ {
    /** @deprecated use `GetActionsResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetActionsResponseBody$inboundSchema;
    /** @deprecated use `GetActionsResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetActionsResponseBody$outboundSchema;
    /** @deprecated use `GetActionsResponseBody$Outbound` instead. */
    export type Outbound = GetActionsResponseBody$Outbound;
}
