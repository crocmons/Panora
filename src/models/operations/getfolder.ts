/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetFolderRequest = {
    /**
     * id of the folder you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Filestorage software.
     */
    remoteData?: boolean | undefined;
};

export type GetFolderResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedFolderOutput | undefined;
};

/** @internal */
export const GetFolderRequest$inboundSchema: z.ZodType<GetFolderRequest, z.ZodTypeDef, unknown> = z
    .object({
        id: z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remote_data: "remoteData",
        });
    });

/** @internal */
export type GetFolderRequest$Outbound = {
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetFolderRequest$outboundSchema: z.ZodType<
    GetFolderRequest$Outbound,
    z.ZodTypeDef,
    GetFolderRequest
> = z
    .object({
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFolderRequest$ {
    /** @deprecated use `GetFolderRequest$inboundSchema` instead. */
    export const inboundSchema = GetFolderRequest$inboundSchema;
    /** @deprecated use `GetFolderRequest$outboundSchema` instead. */
    export const outboundSchema = GetFolderRequest$outboundSchema;
    /** @deprecated use `GetFolderRequest$Outbound` instead. */
    export type Outbound = GetFolderRequest$Outbound;
}

/** @internal */
export const GetFolderResponseBody$inboundSchema: z.ZodType<
    GetFolderResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedFolderOutput$inboundSchema.optional(),
});

/** @internal */
export type GetFolderResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedFolderOutput$Outbound | undefined;
};

/** @internal */
export const GetFolderResponseBody$outboundSchema: z.ZodType<
    GetFolderResponseBody$Outbound,
    z.ZodTypeDef,
    GetFolderResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedFolderOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFolderResponseBody$ {
    /** @deprecated use `GetFolderResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetFolderResponseBody$inboundSchema;
    /** @deprecated use `GetFolderResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetFolderResponseBody$outboundSchema;
    /** @deprecated use `GetFolderResponseBody$Outbound` instead. */
    export type Outbound = GetFolderResponseBody$Outbound;
}
