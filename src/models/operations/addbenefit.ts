/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddBenefitRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
    unifiedBenefitInput: components.UnifiedBenefitInput;
};

export type AddBenefitResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedBenefitOutput | undefined;
};

export type AddBenefitResponse = components.UnifiedBenefitOutput | AddBenefitResponseBody;

/** @internal */
export const AddBenefitRequest$inboundSchema: z.ZodType<AddBenefitRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
            UnifiedBenefitInput: components.UnifiedBenefitInput$inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
                UnifiedBenefitInput: "unifiedBenefitInput",
            });
        });

/** @internal */
export type AddBenefitRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedBenefitInput: components.UnifiedBenefitInput$Outbound;
};

/** @internal */
export const AddBenefitRequest$outboundSchema: z.ZodType<
    AddBenefitRequest$Outbound,
    z.ZodTypeDef,
    AddBenefitRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedBenefitInput: components.UnifiedBenefitInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedBenefitInput: "UnifiedBenefitInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddBenefitRequest$ {
    /** @deprecated use `AddBenefitRequest$inboundSchema` instead. */
    export const inboundSchema = AddBenefitRequest$inboundSchema;
    /** @deprecated use `AddBenefitRequest$outboundSchema` instead. */
    export const outboundSchema = AddBenefitRequest$outboundSchema;
    /** @deprecated use `AddBenefitRequest$Outbound` instead. */
    export type Outbound = AddBenefitRequest$Outbound;
}

/** @internal */
export const AddBenefitResponseBody$inboundSchema: z.ZodType<
    AddBenefitResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedBenefitOutput$inboundSchema.optional(),
});

/** @internal */
export type AddBenefitResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedBenefitOutput$Outbound | undefined;
};

/** @internal */
export const AddBenefitResponseBody$outboundSchema: z.ZodType<
    AddBenefitResponseBody$Outbound,
    z.ZodTypeDef,
    AddBenefitResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedBenefitOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddBenefitResponseBody$ {
    /** @deprecated use `AddBenefitResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddBenefitResponseBody$inboundSchema;
    /** @deprecated use `AddBenefitResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddBenefitResponseBody$outboundSchema;
    /** @deprecated use `AddBenefitResponseBody$Outbound` instead. */
    export type Outbound = AddBenefitResponseBody$Outbound;
}

/** @internal */
export const AddBenefitResponse$inboundSchema: z.ZodType<
    AddBenefitResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedBenefitOutput$inboundSchema,
    z.lazy(() => AddBenefitResponseBody$inboundSchema),
]);

/** @internal */
export type AddBenefitResponse$Outbound =
    | components.UnifiedBenefitOutput$Outbound
    | AddBenefitResponseBody$Outbound;

/** @internal */
export const AddBenefitResponse$outboundSchema: z.ZodType<
    AddBenefitResponse$Outbound,
    z.ZodTypeDef,
    AddBenefitResponse
> = z.union([
    components.UnifiedBenefitOutput$outboundSchema,
    z.lazy(() => AddBenefitResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddBenefitResponse$ {
    /** @deprecated use `AddBenefitResponse$inboundSchema` instead. */
    export const inboundSchema = AddBenefitResponse$inboundSchema;
    /** @deprecated use `AddBenefitResponse$outboundSchema` instead. */
    export const outboundSchema = AddBenefitResponse$outboundSchema;
    /** @deprecated use `AddBenefitResponse$Outbound` instead. */
    export type Outbound = AddBenefitResponse$Outbound;
}
