/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddDepartmentRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedDepartmentInput: components.UnifiedDepartmentInput;
};

export type AddDepartmentResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedDepartmentOutput | undefined;
};

export type AddDepartmentResponse = components.UnifiedDepartmentOutput | AddDepartmentResponseBody;

/** @internal */
export const AddDepartmentRequest$inboundSchema: z.ZodType<
    AddDepartmentRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedDepartmentInput: components.UnifiedDepartmentInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedDepartmentInput: "unifiedDepartmentInput",
        });
    });

/** @internal */
export type AddDepartmentRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedDepartmentInput: components.UnifiedDepartmentInput$Outbound;
};

/** @internal */
export const AddDepartmentRequest$outboundSchema: z.ZodType<
    AddDepartmentRequest$Outbound,
    z.ZodTypeDef,
    AddDepartmentRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedDepartmentInput: components.UnifiedDepartmentInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedDepartmentInput: "UnifiedDepartmentInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddDepartmentRequest$ {
    /** @deprecated use `AddDepartmentRequest$inboundSchema` instead. */
    export const inboundSchema = AddDepartmentRequest$inboundSchema;
    /** @deprecated use `AddDepartmentRequest$outboundSchema` instead. */
    export const outboundSchema = AddDepartmentRequest$outboundSchema;
    /** @deprecated use `AddDepartmentRequest$Outbound` instead. */
    export type Outbound = AddDepartmentRequest$Outbound;
}

/** @internal */
export const AddDepartmentResponseBody$inboundSchema: z.ZodType<
    AddDepartmentResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedDepartmentOutput$inboundSchema.optional(),
});

/** @internal */
export type AddDepartmentResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedDepartmentOutput$Outbound | undefined;
};

/** @internal */
export const AddDepartmentResponseBody$outboundSchema: z.ZodType<
    AddDepartmentResponseBody$Outbound,
    z.ZodTypeDef,
    AddDepartmentResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedDepartmentOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddDepartmentResponseBody$ {
    /** @deprecated use `AddDepartmentResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddDepartmentResponseBody$inboundSchema;
    /** @deprecated use `AddDepartmentResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddDepartmentResponseBody$outboundSchema;
    /** @deprecated use `AddDepartmentResponseBody$Outbound` instead. */
    export type Outbound = AddDepartmentResponseBody$Outbound;
}

/** @internal */
export const AddDepartmentResponse$inboundSchema: z.ZodType<
    AddDepartmentResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedDepartmentOutput$inboundSchema,
    z.lazy(() => AddDepartmentResponseBody$inboundSchema),
]);

/** @internal */
export type AddDepartmentResponse$Outbound =
    | components.UnifiedDepartmentOutput$Outbound
    | AddDepartmentResponseBody$Outbound;

/** @internal */
export const AddDepartmentResponse$outboundSchema: z.ZodType<
    AddDepartmentResponse$Outbound,
    z.ZodTypeDef,
    AddDepartmentResponse
> = z.union([
    components.UnifiedDepartmentOutput$outboundSchema,
    z.lazy(() => AddDepartmentResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddDepartmentResponse$ {
    /** @deprecated use `AddDepartmentResponse$inboundSchema` instead. */
    export const inboundSchema = AddDepartmentResponse$inboundSchema;
    /** @deprecated use `AddDepartmentResponse$outboundSchema` instead. */
    export const outboundSchema = AddDepartmentResponse$outboundSchema;
    /** @deprecated use `AddDepartmentResponse$Outbound` instead. */
    export type Outbound = AddDepartmentResponse$Outbound;
}
