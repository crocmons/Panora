/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddTaxRateRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Accounting software.
     */
    remoteData?: boolean | undefined;
    unifiedTaxRateInput: components.UnifiedTaxRateInput;
};

export type AddTaxRateResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTaxRateOutput | undefined;
};

export type AddTaxRateResponse = components.UnifiedTaxRateOutput | AddTaxRateResponseBody;

/** @internal */
export const AddTaxRateRequest$inboundSchema: z.ZodType<AddTaxRateRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
            UnifiedTaxRateInput: components.UnifiedTaxRateInput$inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
                UnifiedTaxRateInput: "unifiedTaxRateInput",
            });
        });

/** @internal */
export type AddTaxRateRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedTaxRateInput: components.UnifiedTaxRateInput$Outbound;
};

/** @internal */
export const AddTaxRateRequest$outboundSchema: z.ZodType<
    AddTaxRateRequest$Outbound,
    z.ZodTypeDef,
    AddTaxRateRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedTaxRateInput: components.UnifiedTaxRateInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedTaxRateInput: "UnifiedTaxRateInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTaxRateRequest$ {
    /** @deprecated use `AddTaxRateRequest$inboundSchema` instead. */
    export const inboundSchema = AddTaxRateRequest$inboundSchema;
    /** @deprecated use `AddTaxRateRequest$outboundSchema` instead. */
    export const outboundSchema = AddTaxRateRequest$outboundSchema;
    /** @deprecated use `AddTaxRateRequest$Outbound` instead. */
    export type Outbound = AddTaxRateRequest$Outbound;
}

/** @internal */
export const AddTaxRateResponseBody$inboundSchema: z.ZodType<
    AddTaxRateResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTaxRateOutput$inboundSchema.optional(),
});

/** @internal */
export type AddTaxRateResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTaxRateOutput$Outbound | undefined;
};

/** @internal */
export const AddTaxRateResponseBody$outboundSchema: z.ZodType<
    AddTaxRateResponseBody$Outbound,
    z.ZodTypeDef,
    AddTaxRateResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTaxRateOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTaxRateResponseBody$ {
    /** @deprecated use `AddTaxRateResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddTaxRateResponseBody$inboundSchema;
    /** @deprecated use `AddTaxRateResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddTaxRateResponseBody$outboundSchema;
    /** @deprecated use `AddTaxRateResponseBody$Outbound` instead. */
    export type Outbound = AddTaxRateResponseBody$Outbound;
}

/** @internal */
export const AddTaxRateResponse$inboundSchema: z.ZodType<
    AddTaxRateResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedTaxRateOutput$inboundSchema,
    z.lazy(() => AddTaxRateResponseBody$inboundSchema),
]);

/** @internal */
export type AddTaxRateResponse$Outbound =
    | components.UnifiedTaxRateOutput$Outbound
    | AddTaxRateResponseBody$Outbound;

/** @internal */
export const AddTaxRateResponse$outboundSchema: z.ZodType<
    AddTaxRateResponse$Outbound,
    z.ZodTypeDef,
    AddTaxRateResponse
> = z.union([
    components.UnifiedTaxRateOutput$outboundSchema,
    z.lazy(() => AddTaxRateResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTaxRateResponse$ {
    /** @deprecated use `AddTaxRateResponse$inboundSchema` instead. */
    export const inboundSchema = AddTaxRateResponse$inboundSchema;
    /** @deprecated use `AddTaxRateResponse$outboundSchema` instead. */
    export const outboundSchema = AddTaxRateResponse$outboundSchema;
    /** @deprecated use `AddTaxRateResponse$Outbound` instead. */
    export type Outbound = AddTaxRateResponse$Outbound;
}
