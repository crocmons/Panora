/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddAtsUserRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedUserInput: components.UnifiedUserInput;
};

export type AddAtsUserResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedUserOutput | undefined;
};

export type AddAtsUserResponse = components.UnifiedUserOutput | AddAtsUserResponseBody;

/** @internal */
export const AddAtsUserRequest$inboundSchema: z.ZodType<AddAtsUserRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
            UnifiedUserInput: components.UnifiedUserInput$inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
                UnifiedUserInput: "unifiedUserInput",
            });
        });

/** @internal */
export type AddAtsUserRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedUserInput: components.UnifiedUserInput$Outbound;
};

/** @internal */
export const AddAtsUserRequest$outboundSchema: z.ZodType<
    AddAtsUserRequest$Outbound,
    z.ZodTypeDef,
    AddAtsUserRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedUserInput: components.UnifiedUserInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedUserInput: "UnifiedUserInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAtsUserRequest$ {
    /** @deprecated use `AddAtsUserRequest$inboundSchema` instead. */
    export const inboundSchema = AddAtsUserRequest$inboundSchema;
    /** @deprecated use `AddAtsUserRequest$outboundSchema` instead. */
    export const outboundSchema = AddAtsUserRequest$outboundSchema;
    /** @deprecated use `AddAtsUserRequest$Outbound` instead. */
    export type Outbound = AddAtsUserRequest$Outbound;
}

/** @internal */
export const AddAtsUserResponseBody$inboundSchema: z.ZodType<
    AddAtsUserResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedUserOutput$inboundSchema.optional(),
});

/** @internal */
export type AddAtsUserResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedUserOutput$Outbound | undefined;
};

/** @internal */
export const AddAtsUserResponseBody$outboundSchema: z.ZodType<
    AddAtsUserResponseBody$Outbound,
    z.ZodTypeDef,
    AddAtsUserResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedUserOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAtsUserResponseBody$ {
    /** @deprecated use `AddAtsUserResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddAtsUserResponseBody$inboundSchema;
    /** @deprecated use `AddAtsUserResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddAtsUserResponseBody$outboundSchema;
    /** @deprecated use `AddAtsUserResponseBody$Outbound` instead. */
    export type Outbound = AddAtsUserResponseBody$Outbound;
}

/** @internal */
export const AddAtsUserResponse$inboundSchema: z.ZodType<
    AddAtsUserResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedUserOutput$inboundSchema,
    z.lazy(() => AddAtsUserResponseBody$inboundSchema),
]);

/** @internal */
export type AddAtsUserResponse$Outbound =
    | components.UnifiedUserOutput$Outbound
    | AddAtsUserResponseBody$Outbound;

/** @internal */
export const AddAtsUserResponse$outboundSchema: z.ZodType<
    AddAtsUserResponse$Outbound,
    z.ZodTypeDef,
    AddAtsUserResponse
> = z.union([
    components.UnifiedUserOutput$outboundSchema,
    z.lazy(() => AddAtsUserResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAtsUserResponse$ {
    /** @deprecated use `AddAtsUserResponse$inboundSchema` instead. */
    export const inboundSchema = AddAtsUserResponse$inboundSchema;
    /** @deprecated use `AddAtsUserResponse$outboundSchema` instead. */
    export const outboundSchema = AddAtsUserResponse$outboundSchema;
    /** @deprecated use `AddAtsUserResponse$Outbound` instead. */
    export type Outbound = AddAtsUserResponse$Outbound;
}
