/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddInterviewRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedInterviewInput: components.UnifiedInterviewInput;
};

export type AddInterviewResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedInterviewOutput | undefined;
};

export type AddInterviewResponse = components.UnifiedInterviewOutput | AddInterviewResponseBody;

/** @internal */
export const AddInterviewRequest$inboundSchema: z.ZodType<
    AddInterviewRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedInterviewInput: components.UnifiedInterviewInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedInterviewInput: "unifiedInterviewInput",
        });
    });

/** @internal */
export type AddInterviewRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedInterviewInput: components.UnifiedInterviewInput$Outbound;
};

/** @internal */
export const AddInterviewRequest$outboundSchema: z.ZodType<
    AddInterviewRequest$Outbound,
    z.ZodTypeDef,
    AddInterviewRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedInterviewInput: components.UnifiedInterviewInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedInterviewInput: "UnifiedInterviewInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddInterviewRequest$ {
    /** @deprecated use `AddInterviewRequest$inboundSchema` instead. */
    export const inboundSchema = AddInterviewRequest$inboundSchema;
    /** @deprecated use `AddInterviewRequest$outboundSchema` instead. */
    export const outboundSchema = AddInterviewRequest$outboundSchema;
    /** @deprecated use `AddInterviewRequest$Outbound` instead. */
    export type Outbound = AddInterviewRequest$Outbound;
}

/** @internal */
export const AddInterviewResponseBody$inboundSchema: z.ZodType<
    AddInterviewResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedInterviewOutput$inboundSchema.optional(),
});

/** @internal */
export type AddInterviewResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedInterviewOutput$Outbound | undefined;
};

/** @internal */
export const AddInterviewResponseBody$outboundSchema: z.ZodType<
    AddInterviewResponseBody$Outbound,
    z.ZodTypeDef,
    AddInterviewResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedInterviewOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddInterviewResponseBody$ {
    /** @deprecated use `AddInterviewResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddInterviewResponseBody$inboundSchema;
    /** @deprecated use `AddInterviewResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddInterviewResponseBody$outboundSchema;
    /** @deprecated use `AddInterviewResponseBody$Outbound` instead. */
    export type Outbound = AddInterviewResponseBody$Outbound;
}

/** @internal */
export const AddInterviewResponse$inboundSchema: z.ZodType<
    AddInterviewResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedInterviewOutput$inboundSchema,
    z.lazy(() => AddInterviewResponseBody$inboundSchema),
]);

/** @internal */
export type AddInterviewResponse$Outbound =
    | components.UnifiedInterviewOutput$Outbound
    | AddInterviewResponseBody$Outbound;

/** @internal */
export const AddInterviewResponse$outboundSchema: z.ZodType<
    AddInterviewResponse$Outbound,
    z.ZodTypeDef,
    AddInterviewResponse
> = z.union([
    components.UnifiedInterviewOutput$outboundSchema,
    z.lazy(() => AddInterviewResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddInterviewResponse$ {
    /** @deprecated use `AddInterviewResponse$inboundSchema` instead. */
    export const inboundSchema = AddInterviewResponse$inboundSchema;
    /** @deprecated use `AddInterviewResponse$outboundSchema` instead. */
    export const outboundSchema = AddInterviewResponse$outboundSchema;
    /** @deprecated use `AddInterviewResponse$Outbound` instead. */
    export type Outbound = AddInterviewResponse$Outbound;
}
