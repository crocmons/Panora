/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddTicketRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ticketing software.
     */
    remoteData?: boolean | undefined;
    unifiedTicketInput: components.UnifiedTicketInput;
};

export type AddTicketResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTicketOutput | undefined;
};

export type AddTicketResponse = AddTicketResponseBody | components.UnifiedTicketOutput;

/** @internal */
export const AddTicketRequest$inboundSchema: z.ZodType<AddTicketRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedTicketInput: components.UnifiedTicketInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedTicketInput: "unifiedTicketInput",
        });
    });

/** @internal */
export type AddTicketRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedTicketInput: components.UnifiedTicketInput$Outbound;
};

/** @internal */
export const AddTicketRequest$outboundSchema: z.ZodType<
    AddTicketRequest$Outbound,
    z.ZodTypeDef,
    AddTicketRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedTicketInput: components.UnifiedTicketInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedTicketInput: "UnifiedTicketInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTicketRequest$ {
    /** @deprecated use `AddTicketRequest$inboundSchema` instead. */
    export const inboundSchema = AddTicketRequest$inboundSchema;
    /** @deprecated use `AddTicketRequest$outboundSchema` instead. */
    export const outboundSchema = AddTicketRequest$outboundSchema;
    /** @deprecated use `AddTicketRequest$Outbound` instead. */
    export type Outbound = AddTicketRequest$Outbound;
}

/** @internal */
export const AddTicketResponseBody$inboundSchema: z.ZodType<
    AddTicketResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTicketOutput$inboundSchema.optional(),
});

/** @internal */
export type AddTicketResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTicketOutput$Outbound | undefined;
};

/** @internal */
export const AddTicketResponseBody$outboundSchema: z.ZodType<
    AddTicketResponseBody$Outbound,
    z.ZodTypeDef,
    AddTicketResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTicketOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTicketResponseBody$ {
    /** @deprecated use `AddTicketResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddTicketResponseBody$inboundSchema;
    /** @deprecated use `AddTicketResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddTicketResponseBody$outboundSchema;
    /** @deprecated use `AddTicketResponseBody$Outbound` instead. */
    export type Outbound = AddTicketResponseBody$Outbound;
}

/** @internal */
export const AddTicketResponse$inboundSchema: z.ZodType<AddTicketResponse, z.ZodTypeDef, unknown> =
    z.union([
        z.lazy(() => AddTicketResponseBody$inboundSchema),
        components.UnifiedTicketOutput$inboundSchema,
    ]);

/** @internal */
export type AddTicketResponse$Outbound =
    | AddTicketResponseBody$Outbound
    | components.UnifiedTicketOutput$Outbound;

/** @internal */
export const AddTicketResponse$outboundSchema: z.ZodType<
    AddTicketResponse$Outbound,
    z.ZodTypeDef,
    AddTicketResponse
> = z.union([
    z.lazy(() => AddTicketResponseBody$outboundSchema),
    components.UnifiedTicketOutput$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTicketResponse$ {
    /** @deprecated use `AddTicketResponse$inboundSchema` instead. */
    export const inboundSchema = AddTicketResponse$inboundSchema;
    /** @deprecated use `AddTicketResponse$outboundSchema` instead. */
    export const outboundSchema = AddTicketResponse$outboundSchema;
    /** @deprecated use `AddTicketResponse$Outbound` instead. */
    export type Outbound = AddTicketResponse$Outbound;
}
