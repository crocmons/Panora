/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddEmployeeRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
    unifiedEmployeeInput: components.UnifiedEmployeeInput;
};

export type AddEmployeeResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedEmployeeOutput | undefined;
};

export type AddEmployeeResponse = components.UnifiedEmployeeOutput | AddEmployeeResponseBody;

/** @internal */
export const AddEmployeeRequest$inboundSchema: z.ZodType<
    AddEmployeeRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedEmployeeInput: components.UnifiedEmployeeInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedEmployeeInput: "unifiedEmployeeInput",
        });
    });

/** @internal */
export type AddEmployeeRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedEmployeeInput: components.UnifiedEmployeeInput$Outbound;
};

/** @internal */
export const AddEmployeeRequest$outboundSchema: z.ZodType<
    AddEmployeeRequest$Outbound,
    z.ZodTypeDef,
    AddEmployeeRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedEmployeeInput: components.UnifiedEmployeeInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedEmployeeInput: "UnifiedEmployeeInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddEmployeeRequest$ {
    /** @deprecated use `AddEmployeeRequest$inboundSchema` instead. */
    export const inboundSchema = AddEmployeeRequest$inboundSchema;
    /** @deprecated use `AddEmployeeRequest$outboundSchema` instead. */
    export const outboundSchema = AddEmployeeRequest$outboundSchema;
    /** @deprecated use `AddEmployeeRequest$Outbound` instead. */
    export type Outbound = AddEmployeeRequest$Outbound;
}

/** @internal */
export const AddEmployeeResponseBody$inboundSchema: z.ZodType<
    AddEmployeeResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedEmployeeOutput$inboundSchema.optional(),
});

/** @internal */
export type AddEmployeeResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedEmployeeOutput$Outbound | undefined;
};

/** @internal */
export const AddEmployeeResponseBody$outboundSchema: z.ZodType<
    AddEmployeeResponseBody$Outbound,
    z.ZodTypeDef,
    AddEmployeeResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedEmployeeOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddEmployeeResponseBody$ {
    /** @deprecated use `AddEmployeeResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddEmployeeResponseBody$inboundSchema;
    /** @deprecated use `AddEmployeeResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddEmployeeResponseBody$outboundSchema;
    /** @deprecated use `AddEmployeeResponseBody$Outbound` instead. */
    export type Outbound = AddEmployeeResponseBody$Outbound;
}

/** @internal */
export const AddEmployeeResponse$inboundSchema: z.ZodType<
    AddEmployeeResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedEmployeeOutput$inboundSchema,
    z.lazy(() => AddEmployeeResponseBody$inboundSchema),
]);

/** @internal */
export type AddEmployeeResponse$Outbound =
    | components.UnifiedEmployeeOutput$Outbound
    | AddEmployeeResponseBody$Outbound;

/** @internal */
export const AddEmployeeResponse$outboundSchema: z.ZodType<
    AddEmployeeResponse$Outbound,
    z.ZodTypeDef,
    AddEmployeeResponse
> = z.union([
    components.UnifiedEmployeeOutput$outboundSchema,
    z.lazy(() => AddEmployeeResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddEmployeeResponse$ {
    /** @deprecated use `AddEmployeeResponse$inboundSchema` instead. */
    export const inboundSchema = AddEmployeeResponse$inboundSchema;
    /** @deprecated use `AddEmployeeResponse$outboundSchema` instead. */
    export const outboundSchema = AddEmployeeResponse$outboundSchema;
    /** @deprecated use `AddEmployeeResponse$Outbound` instead. */
    export type Outbound = AddEmployeeResponse$Outbound;
}
