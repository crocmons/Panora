/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type HandleApiKeyCallbackRequest = {
    state: string;
    bodyDataType: components.BodyDataType;
};

/** @internal */
export const HandleApiKeyCallbackRequest$inboundSchema: z.ZodType<
    HandleApiKeyCallbackRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        state: z.string(),
        BodyDataType: components.BodyDataType$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            BodyDataType: "bodyDataType",
        });
    });

/** @internal */
export type HandleApiKeyCallbackRequest$Outbound = {
    state: string;
    BodyDataType: components.BodyDataType$Outbound;
};

/** @internal */
export const HandleApiKeyCallbackRequest$outboundSchema: z.ZodType<
    HandleApiKeyCallbackRequest$Outbound,
    z.ZodTypeDef,
    HandleApiKeyCallbackRequest
> = z
    .object({
        state: z.string(),
        bodyDataType: components.BodyDataType$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            bodyDataType: "BodyDataType",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HandleApiKeyCallbackRequest$ {
    /** @deprecated use `HandleApiKeyCallbackRequest$inboundSchema` instead. */
    export const inboundSchema = HandleApiKeyCallbackRequest$inboundSchema;
    /** @deprecated use `HandleApiKeyCallbackRequest$outboundSchema` instead. */
    export const outboundSchema = HandleApiKeyCallbackRequest$outboundSchema;
    /** @deprecated use `HandleApiKeyCallbackRequest$Outbound` instead. */
    export type Outbound = HandleApiKeyCallbackRequest$Outbound;
}
