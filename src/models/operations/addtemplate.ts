/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddTemplateRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
    unifiedTemplateInput: components.UnifiedTemplateInput;
};

export type AddTemplateResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTemplateOutput | undefined;
};

export type AddTemplateResponse = components.UnifiedTemplateOutput | AddTemplateResponseBody;

/** @internal */
export const AddTemplateRequest$inboundSchema: z.ZodType<
    AddTemplateRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedTemplateInput: components.UnifiedTemplateInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedTemplateInput: "unifiedTemplateInput",
        });
    });

/** @internal */
export type AddTemplateRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedTemplateInput: components.UnifiedTemplateInput$Outbound;
};

/** @internal */
export const AddTemplateRequest$outboundSchema: z.ZodType<
    AddTemplateRequest$Outbound,
    z.ZodTypeDef,
    AddTemplateRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedTemplateInput: components.UnifiedTemplateInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedTemplateInput: "UnifiedTemplateInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTemplateRequest$ {
    /** @deprecated use `AddTemplateRequest$inboundSchema` instead. */
    export const inboundSchema = AddTemplateRequest$inboundSchema;
    /** @deprecated use `AddTemplateRequest$outboundSchema` instead. */
    export const outboundSchema = AddTemplateRequest$outboundSchema;
    /** @deprecated use `AddTemplateRequest$Outbound` instead. */
    export type Outbound = AddTemplateRequest$Outbound;
}

/** @internal */
export const AddTemplateResponseBody$inboundSchema: z.ZodType<
    AddTemplateResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTemplateOutput$inboundSchema.optional(),
});

/** @internal */
export type AddTemplateResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedTemplateOutput$Outbound | undefined;
};

/** @internal */
export const AddTemplateResponseBody$outboundSchema: z.ZodType<
    AddTemplateResponseBody$Outbound,
    z.ZodTypeDef,
    AddTemplateResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedTemplateOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTemplateResponseBody$ {
    /** @deprecated use `AddTemplateResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddTemplateResponseBody$inboundSchema;
    /** @deprecated use `AddTemplateResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddTemplateResponseBody$outboundSchema;
    /** @deprecated use `AddTemplateResponseBody$Outbound` instead. */
    export type Outbound = AddTemplateResponseBody$Outbound;
}

/** @internal */
export const AddTemplateResponse$inboundSchema: z.ZodType<
    AddTemplateResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedTemplateOutput$inboundSchema,
    z.lazy(() => AddTemplateResponseBody$inboundSchema),
]);

/** @internal */
export type AddTemplateResponse$Outbound =
    | components.UnifiedTemplateOutput$Outbound
    | AddTemplateResponseBody$Outbound;

/** @internal */
export const AddTemplateResponse$outboundSchema: z.ZodType<
    AddTemplateResponse$Outbound,
    z.ZodTypeDef,
    AddTemplateResponse
> = z.union([
    components.UnifiedTemplateOutput$outboundSchema,
    z.lazy(() => AddTemplateResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTemplateResponse$ {
    /** @deprecated use `AddTemplateResponse$inboundSchema` instead. */
    export const inboundSchema = AddTemplateResponse$inboundSchema;
    /** @deprecated use `AddTemplateResponse$outboundSchema` instead. */
    export const outboundSchema = AddTemplateResponse$outboundSchema;
    /** @deprecated use `AddTemplateResponse$Outbound` instead. */
    export type Outbound = AddTemplateResponse$Outbound;
}
