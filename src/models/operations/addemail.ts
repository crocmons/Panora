/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddEmailRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
    unifiedEmailInput: components.UnifiedEmailInput;
};

export type AddEmailResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedEmailOutput | undefined;
};

export type AddEmailResponse = components.UnifiedEmailOutput | AddEmailResponseBody;

/** @internal */
export const AddEmailRequest$inboundSchema: z.ZodType<AddEmailRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedEmailInput: components.UnifiedEmailInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedEmailInput: "unifiedEmailInput",
        });
    });

/** @internal */
export type AddEmailRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedEmailInput: components.UnifiedEmailInput$Outbound;
};

/** @internal */
export const AddEmailRequest$outboundSchema: z.ZodType<
    AddEmailRequest$Outbound,
    z.ZodTypeDef,
    AddEmailRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedEmailInput: components.UnifiedEmailInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedEmailInput: "UnifiedEmailInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddEmailRequest$ {
    /** @deprecated use `AddEmailRequest$inboundSchema` instead. */
    export const inboundSchema = AddEmailRequest$inboundSchema;
    /** @deprecated use `AddEmailRequest$outboundSchema` instead. */
    export const outboundSchema = AddEmailRequest$outboundSchema;
    /** @deprecated use `AddEmailRequest$Outbound` instead. */
    export type Outbound = AddEmailRequest$Outbound;
}

/** @internal */
export const AddEmailResponseBody$inboundSchema: z.ZodType<
    AddEmailResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedEmailOutput$inboundSchema.optional(),
});

/** @internal */
export type AddEmailResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedEmailOutput$Outbound | undefined;
};

/** @internal */
export const AddEmailResponseBody$outboundSchema: z.ZodType<
    AddEmailResponseBody$Outbound,
    z.ZodTypeDef,
    AddEmailResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedEmailOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddEmailResponseBody$ {
    /** @deprecated use `AddEmailResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddEmailResponseBody$inboundSchema;
    /** @deprecated use `AddEmailResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddEmailResponseBody$outboundSchema;
    /** @deprecated use `AddEmailResponseBody$Outbound` instead. */
    export type Outbound = AddEmailResponseBody$Outbound;
}

/** @internal */
export const AddEmailResponse$inboundSchema: z.ZodType<AddEmailResponse, z.ZodTypeDef, unknown> =
    z.union([
        components.UnifiedEmailOutput$inboundSchema,
        z.lazy(() => AddEmailResponseBody$inboundSchema),
    ]);

/** @internal */
export type AddEmailResponse$Outbound =
    | components.UnifiedEmailOutput$Outbound
    | AddEmailResponseBody$Outbound;

/** @internal */
export const AddEmailResponse$outboundSchema: z.ZodType<
    AddEmailResponse$Outbound,
    z.ZodTypeDef,
    AddEmailResponse
> = z.union([
    components.UnifiedEmailOutput$outboundSchema,
    z.lazy(() => AddEmailResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddEmailResponse$ {
    /** @deprecated use `AddEmailResponse$inboundSchema` instead. */
    export const inboundSchema = AddEmailResponse$inboundSchema;
    /** @deprecated use `AddEmailResponse$outboundSchema` instead. */
    export const outboundSchema = AddEmailResponse$outboundSchema;
    /** @deprecated use `AddEmailResponse$Outbound` instead. */
    export type Outbound = AddEmailResponse$Outbound;
}
