/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddPayrollRunRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
    unifiedPayrollRunInput: components.UnifiedPayrollRunInput;
};

export type AddPayrollRunResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedPayrollRunOutput | undefined;
};

export type AddPayrollRunResponse = components.UnifiedPayrollRunOutput | AddPayrollRunResponseBody;

/** @internal */
export const AddPayrollRunRequest$inboundSchema: z.ZodType<
    AddPayrollRunRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedPayrollRunInput: components.UnifiedPayrollRunInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedPayrollRunInput: "unifiedPayrollRunInput",
        });
    });

/** @internal */
export type AddPayrollRunRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedPayrollRunInput: components.UnifiedPayrollRunInput$Outbound;
};

/** @internal */
export const AddPayrollRunRequest$outboundSchema: z.ZodType<
    AddPayrollRunRequest$Outbound,
    z.ZodTypeDef,
    AddPayrollRunRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedPayrollRunInput: components.UnifiedPayrollRunInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedPayrollRunInput: "UnifiedPayrollRunInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPayrollRunRequest$ {
    /** @deprecated use `AddPayrollRunRequest$inboundSchema` instead. */
    export const inboundSchema = AddPayrollRunRequest$inboundSchema;
    /** @deprecated use `AddPayrollRunRequest$outboundSchema` instead. */
    export const outboundSchema = AddPayrollRunRequest$outboundSchema;
    /** @deprecated use `AddPayrollRunRequest$Outbound` instead. */
    export type Outbound = AddPayrollRunRequest$Outbound;
}

/** @internal */
export const AddPayrollRunResponseBody$inboundSchema: z.ZodType<
    AddPayrollRunResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedPayrollRunOutput$inboundSchema.optional(),
});

/** @internal */
export type AddPayrollRunResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedPayrollRunOutput$Outbound | undefined;
};

/** @internal */
export const AddPayrollRunResponseBody$outboundSchema: z.ZodType<
    AddPayrollRunResponseBody$Outbound,
    z.ZodTypeDef,
    AddPayrollRunResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedPayrollRunOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPayrollRunResponseBody$ {
    /** @deprecated use `AddPayrollRunResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddPayrollRunResponseBody$inboundSchema;
    /** @deprecated use `AddPayrollRunResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddPayrollRunResponseBody$outboundSchema;
    /** @deprecated use `AddPayrollRunResponseBody$Outbound` instead. */
    export type Outbound = AddPayrollRunResponseBody$Outbound;
}

/** @internal */
export const AddPayrollRunResponse$inboundSchema: z.ZodType<
    AddPayrollRunResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedPayrollRunOutput$inboundSchema,
    z.lazy(() => AddPayrollRunResponseBody$inboundSchema),
]);

/** @internal */
export type AddPayrollRunResponse$Outbound =
    | components.UnifiedPayrollRunOutput$Outbound
    | AddPayrollRunResponseBody$Outbound;

/** @internal */
export const AddPayrollRunResponse$outboundSchema: z.ZodType<
    AddPayrollRunResponse$Outbound,
    z.ZodTypeDef,
    AddPayrollRunResponse
> = z.union([
    components.UnifiedPayrollRunOutput$outboundSchema,
    z.lazy(() => AddPayrollRunResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPayrollRunResponse$ {
    /** @deprecated use `AddPayrollRunResponse$inboundSchema` instead. */
    export const inboundSchema = AddPayrollRunResponse$inboundSchema;
    /** @deprecated use `AddPayrollRunResponse$outboundSchema` instead. */
    export const outboundSchema = AddPayrollRunResponse$outboundSchema;
    /** @deprecated use `AddPayrollRunResponse$Outbound` instead. */
    export type Outbound = AddPayrollRunResponse$Outbound;
}
