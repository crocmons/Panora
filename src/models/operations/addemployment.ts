/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddEmploymentRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
    unifiedEmploymentInput: components.UnifiedEmploymentInput;
};

export type AddEmploymentResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedEmploymentOutput | undefined;
};

export type AddEmploymentResponse = components.UnifiedEmploymentOutput | AddEmploymentResponseBody;

/** @internal */
export const AddEmploymentRequest$inboundSchema: z.ZodType<
    AddEmploymentRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedEmploymentInput: components.UnifiedEmploymentInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedEmploymentInput: "unifiedEmploymentInput",
        });
    });

/** @internal */
export type AddEmploymentRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedEmploymentInput: components.UnifiedEmploymentInput$Outbound;
};

/** @internal */
export const AddEmploymentRequest$outboundSchema: z.ZodType<
    AddEmploymentRequest$Outbound,
    z.ZodTypeDef,
    AddEmploymentRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedEmploymentInput: components.UnifiedEmploymentInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedEmploymentInput: "UnifiedEmploymentInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddEmploymentRequest$ {
    /** @deprecated use `AddEmploymentRequest$inboundSchema` instead. */
    export const inboundSchema = AddEmploymentRequest$inboundSchema;
    /** @deprecated use `AddEmploymentRequest$outboundSchema` instead. */
    export const outboundSchema = AddEmploymentRequest$outboundSchema;
    /** @deprecated use `AddEmploymentRequest$Outbound` instead. */
    export type Outbound = AddEmploymentRequest$Outbound;
}

/** @internal */
export const AddEmploymentResponseBody$inboundSchema: z.ZodType<
    AddEmploymentResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedEmploymentOutput$inboundSchema.optional(),
});

/** @internal */
export type AddEmploymentResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedEmploymentOutput$Outbound | undefined;
};

/** @internal */
export const AddEmploymentResponseBody$outboundSchema: z.ZodType<
    AddEmploymentResponseBody$Outbound,
    z.ZodTypeDef,
    AddEmploymentResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedEmploymentOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddEmploymentResponseBody$ {
    /** @deprecated use `AddEmploymentResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddEmploymentResponseBody$inboundSchema;
    /** @deprecated use `AddEmploymentResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddEmploymentResponseBody$outboundSchema;
    /** @deprecated use `AddEmploymentResponseBody$Outbound` instead. */
    export type Outbound = AddEmploymentResponseBody$Outbound;
}

/** @internal */
export const AddEmploymentResponse$inboundSchema: z.ZodType<
    AddEmploymentResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedEmploymentOutput$inboundSchema,
    z.lazy(() => AddEmploymentResponseBody$inboundSchema),
]);

/** @internal */
export type AddEmploymentResponse$Outbound =
    | components.UnifiedEmploymentOutput$Outbound
    | AddEmploymentResponseBody$Outbound;

/** @internal */
export const AddEmploymentResponse$outboundSchema: z.ZodType<
    AddEmploymentResponse$Outbound,
    z.ZodTypeDef,
    AddEmploymentResponse
> = z.union([
    components.UnifiedEmploymentOutput$outboundSchema,
    z.lazy(() => AddEmploymentResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddEmploymentResponse$ {
    /** @deprecated use `AddEmploymentResponse$inboundSchema` instead. */
    export const inboundSchema = AddEmploymentResponse$inboundSchema;
    /** @deprecated use `AddEmploymentResponse$outboundSchema` instead. */
    export const outboundSchema = AddEmploymentResponse$outboundSchema;
    /** @deprecated use `AddEmploymentResponse$Outbound` instead. */
    export type Outbound = AddEmploymentResponse$Outbound;
}
