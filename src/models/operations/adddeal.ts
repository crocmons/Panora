/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddDealRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Crm software.
     */
    remoteData?: boolean | undefined;
    unifiedDealInput: components.UnifiedDealInput;
};

export type AddDealResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedDealOutput | undefined;
};

export type AddDealResponse = AddDealResponseBody | components.UnifiedDealOutput;

/** @internal */
export const AddDealRequest$inboundSchema: z.ZodType<AddDealRequest, z.ZodTypeDef, unknown> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedDealInput: components.UnifiedDealInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedDealInput: "unifiedDealInput",
        });
    });

/** @internal */
export type AddDealRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedDealInput: components.UnifiedDealInput$Outbound;
};

/** @internal */
export const AddDealRequest$outboundSchema: z.ZodType<
    AddDealRequest$Outbound,
    z.ZodTypeDef,
    AddDealRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedDealInput: components.UnifiedDealInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedDealInput: "UnifiedDealInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddDealRequest$ {
    /** @deprecated use `AddDealRequest$inboundSchema` instead. */
    export const inboundSchema = AddDealRequest$inboundSchema;
    /** @deprecated use `AddDealRequest$outboundSchema` instead. */
    export const outboundSchema = AddDealRequest$outboundSchema;
    /** @deprecated use `AddDealRequest$Outbound` instead. */
    export type Outbound = AddDealRequest$Outbound;
}

/** @internal */
export const AddDealResponseBody$inboundSchema: z.ZodType<
    AddDealResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedDealOutput$inboundSchema.optional(),
});

/** @internal */
export type AddDealResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedDealOutput$Outbound | undefined;
};

/** @internal */
export const AddDealResponseBody$outboundSchema: z.ZodType<
    AddDealResponseBody$Outbound,
    z.ZodTypeDef,
    AddDealResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedDealOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddDealResponseBody$ {
    /** @deprecated use `AddDealResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddDealResponseBody$inboundSchema;
    /** @deprecated use `AddDealResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddDealResponseBody$outboundSchema;
    /** @deprecated use `AddDealResponseBody$Outbound` instead. */
    export type Outbound = AddDealResponseBody$Outbound;
}

/** @internal */
export const AddDealResponse$inboundSchema: z.ZodType<AddDealResponse, z.ZodTypeDef, unknown> =
    z.union([
        z.lazy(() => AddDealResponseBody$inboundSchema),
        components.UnifiedDealOutput$inboundSchema,
    ]);

/** @internal */
export type AddDealResponse$Outbound =
    | AddDealResponseBody$Outbound
    | components.UnifiedDealOutput$Outbound;

/** @internal */
export const AddDealResponse$outboundSchema: z.ZodType<
    AddDealResponse$Outbound,
    z.ZodTypeDef,
    AddDealResponse
> = z.union([
    z.lazy(() => AddDealResponseBody$outboundSchema),
    components.UnifiedDealOutput$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddDealResponse$ {
    /** @deprecated use `AddDealResponse$inboundSchema` instead. */
    export const inboundSchema = AddDealResponse$inboundSchema;
    /** @deprecated use `AddDealResponse$outboundSchema` instead. */
    export const outboundSchema = AddDealResponse$outboundSchema;
    /** @deprecated use `AddDealResponse$Outbound` instead. */
    export type Outbound = AddDealResponse$Outbound;
}
