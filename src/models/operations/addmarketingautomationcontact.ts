/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddMarketingAutomationContactRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
    unifiedContactInput: components.UnifiedContactInput;
};

export type AddMarketingAutomationContactResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedContactOutput | undefined;
};

export type AddMarketingAutomationContactResponse =
    | components.UnifiedContactOutput
    | AddMarketingAutomationContactResponseBody;

/** @internal */
export const AddMarketingAutomationContactRequest$inboundSchema: z.ZodType<
    AddMarketingAutomationContactRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedContactInput: components.UnifiedContactInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedContactInput: "unifiedContactInput",
        });
    });

/** @internal */
export type AddMarketingAutomationContactRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedContactInput: components.UnifiedContactInput$Outbound;
};

/** @internal */
export const AddMarketingAutomationContactRequest$outboundSchema: z.ZodType<
    AddMarketingAutomationContactRequest$Outbound,
    z.ZodTypeDef,
    AddMarketingAutomationContactRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedContactInput: components.UnifiedContactInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedContactInput: "UnifiedContactInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddMarketingAutomationContactRequest$ {
    /** @deprecated use `AddMarketingAutomationContactRequest$inboundSchema` instead. */
    export const inboundSchema = AddMarketingAutomationContactRequest$inboundSchema;
    /** @deprecated use `AddMarketingAutomationContactRequest$outboundSchema` instead. */
    export const outboundSchema = AddMarketingAutomationContactRequest$outboundSchema;
    /** @deprecated use `AddMarketingAutomationContactRequest$Outbound` instead. */
    export type Outbound = AddMarketingAutomationContactRequest$Outbound;
}

/** @internal */
export const AddMarketingAutomationContactResponseBody$inboundSchema: z.ZodType<
    AddMarketingAutomationContactResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedContactOutput$inboundSchema.optional(),
});

/** @internal */
export type AddMarketingAutomationContactResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedContactOutput$Outbound | undefined;
};

/** @internal */
export const AddMarketingAutomationContactResponseBody$outboundSchema: z.ZodType<
    AddMarketingAutomationContactResponseBody$Outbound,
    z.ZodTypeDef,
    AddMarketingAutomationContactResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedContactOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddMarketingAutomationContactResponseBody$ {
    /** @deprecated use `AddMarketingAutomationContactResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddMarketingAutomationContactResponseBody$inboundSchema;
    /** @deprecated use `AddMarketingAutomationContactResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddMarketingAutomationContactResponseBody$outboundSchema;
    /** @deprecated use `AddMarketingAutomationContactResponseBody$Outbound` instead. */
    export type Outbound = AddMarketingAutomationContactResponseBody$Outbound;
}

/** @internal */
export const AddMarketingAutomationContactResponse$inboundSchema: z.ZodType<
    AddMarketingAutomationContactResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.UnifiedContactOutput$inboundSchema,
    z.lazy(() => AddMarketingAutomationContactResponseBody$inboundSchema),
]);

/** @internal */
export type AddMarketingAutomationContactResponse$Outbound =
    | components.UnifiedContactOutput$Outbound
    | AddMarketingAutomationContactResponseBody$Outbound;

/** @internal */
export const AddMarketingAutomationContactResponse$outboundSchema: z.ZodType<
    AddMarketingAutomationContactResponse$Outbound,
    z.ZodTypeDef,
    AddMarketingAutomationContactResponse
> = z.union([
    components.UnifiedContactOutput$outboundSchema,
    z.lazy(() => AddMarketingAutomationContactResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddMarketingAutomationContactResponse$ {
    /** @deprecated use `AddMarketingAutomationContactResponse$inboundSchema` instead. */
    export const inboundSchema = AddMarketingAutomationContactResponse$inboundSchema;
    /** @deprecated use `AddMarketingAutomationContactResponse$outboundSchema` instead. */
    export const outboundSchema = AddMarketingAutomationContactResponse$outboundSchema;
    /** @deprecated use `AddMarketingAutomationContactResponse$Outbound` instead. */
    export type Outbound = AddMarketingAutomationContactResponse$Outbound;
}
