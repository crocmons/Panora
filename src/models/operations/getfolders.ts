/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetFoldersRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Filestorage software.
     */
    remoteData?: boolean | undefined;
};

export type GetFoldersResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedFolderOutput | undefined;
};

/** @internal */
export const GetFoldersRequest$inboundSchema: z.ZodType<GetFoldersRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
            });
        });

/** @internal */
export type GetFoldersRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetFoldersRequest$outboundSchema: z.ZodType<
    GetFoldersRequest$Outbound,
    z.ZodTypeDef,
    GetFoldersRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFoldersRequest$ {
    /** @deprecated use `GetFoldersRequest$inboundSchema` instead. */
    export const inboundSchema = GetFoldersRequest$inboundSchema;
    /** @deprecated use `GetFoldersRequest$outboundSchema` instead. */
    export const outboundSchema = GetFoldersRequest$outboundSchema;
    /** @deprecated use `GetFoldersRequest$Outbound` instead. */
    export type Outbound = GetFoldersRequest$Outbound;
}

/** @internal */
export const GetFoldersResponseBody$inboundSchema: z.ZodType<
    GetFoldersResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedFolderOutput$inboundSchema.optional(),
});

/** @internal */
export type GetFoldersResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedFolderOutput$Outbound | undefined;
};

/** @internal */
export const GetFoldersResponseBody$outboundSchema: z.ZodType<
    GetFoldersResponseBody$Outbound,
    z.ZodTypeDef,
    GetFoldersResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedFolderOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFoldersResponseBody$ {
    /** @deprecated use `GetFoldersResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetFoldersResponseBody$inboundSchema;
    /** @deprecated use `GetFoldersResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetFoldersResponseBody$outboundSchema;
    /** @deprecated use `GetFoldersResponseBody$Outbound` instead. */
    export type Outbound = GetFoldersResponseBody$Outbound;
}
