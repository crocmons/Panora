/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetCandidatesRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
};

export type GetCandidatesResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedCandidateOutput | undefined;
};

/** @internal */
export const GetCandidatesRequest$inboundSchema: z.ZodType<
    GetCandidatesRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
        });
    });

/** @internal */
export type GetCandidatesRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetCandidatesRequest$outboundSchema: z.ZodType<
    GetCandidatesRequest$Outbound,
    z.ZodTypeDef,
    GetCandidatesRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCandidatesRequest$ {
    /** @deprecated use `GetCandidatesRequest$inboundSchema` instead. */
    export const inboundSchema = GetCandidatesRequest$inboundSchema;
    /** @deprecated use `GetCandidatesRequest$outboundSchema` instead. */
    export const outboundSchema = GetCandidatesRequest$outboundSchema;
    /** @deprecated use `GetCandidatesRequest$Outbound` instead. */
    export type Outbound = GetCandidatesRequest$Outbound;
}

/** @internal */
export const GetCandidatesResponseBody$inboundSchema: z.ZodType<
    GetCandidatesResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedCandidateOutput$inboundSchema.optional(),
});

/** @internal */
export type GetCandidatesResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedCandidateOutput$Outbound | undefined;
};

/** @internal */
export const GetCandidatesResponseBody$outboundSchema: z.ZodType<
    GetCandidatesResponseBody$Outbound,
    z.ZodTypeDef,
    GetCandidatesResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedCandidateOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCandidatesResponseBody$ {
    /** @deprecated use `GetCandidatesResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetCandidatesResponseBody$inboundSchema;
    /** @deprecated use `GetCandidatesResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetCandidatesResponseBody$outboundSchema;
    /** @deprecated use `GetCandidatesResponseBody$Outbound` instead. */
    export type Outbound = GetCandidatesResponseBody$Outbound;
}
