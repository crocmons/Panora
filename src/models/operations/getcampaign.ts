/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetCampaignRequest = {
    /**
     * id of the campaign you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
};

export type GetCampaignResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedCampaignOutput | undefined;
};

/** @internal */
export const GetCampaignRequest$inboundSchema: z.ZodType<
    GetCampaignRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remote_data: "remoteData",
        });
    });

/** @internal */
export type GetCampaignRequest$Outbound = {
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const GetCampaignRequest$outboundSchema: z.ZodType<
    GetCampaignRequest$Outbound,
    z.ZodTypeDef,
    GetCampaignRequest
> = z
    .object({
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCampaignRequest$ {
    /** @deprecated use `GetCampaignRequest$inboundSchema` instead. */
    export const inboundSchema = GetCampaignRequest$inboundSchema;
    /** @deprecated use `GetCampaignRequest$outboundSchema` instead. */
    export const outboundSchema = GetCampaignRequest$outboundSchema;
    /** @deprecated use `GetCampaignRequest$Outbound` instead. */
    export type Outbound = GetCampaignRequest$Outbound;
}

/** @internal */
export const GetCampaignResponseBody$inboundSchema: z.ZodType<
    GetCampaignResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedCampaignOutput$inboundSchema.optional(),
});

/** @internal */
export type GetCampaignResponseBody$Outbound = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedCampaignOutput$Outbound | undefined;
};

/** @internal */
export const GetCampaignResponseBody$outboundSchema: z.ZodType<
    GetCampaignResponseBody$Outbound,
    z.ZodTypeDef,
    GetCampaignResponseBody
> = z.object({
    message: z.string().optional(),
    error: z.string().optional(),
    statusCode: z.number(),
    data: components.UnifiedCampaignOutput$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCampaignResponseBody$ {
    /** @deprecated use `GetCampaignResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetCampaignResponseBody$inboundSchema;
    /** @deprecated use `GetCampaignResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetCampaignResponseBody$outboundSchema;
    /** @deprecated use `GetCampaignResponseBody$Outbound` instead. */
    export type Outbound = GetCampaignResponseBody$Outbound;
}
